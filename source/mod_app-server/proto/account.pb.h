// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: account.proto

#ifndef PROTOBUF_account_2eproto__INCLUDED
#define PROTOBUF_account_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "common_data.pb.h"
// @@protoc_insertion_point(includes)

namespace Cell {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_account_2eproto();
void protobuf_AssignDesc_account_2eproto();
void protobuf_ShutdownFile_account_2eproto();

class GetUserProfileReqMsg;
class GetUserProfileRespMsg;
class GetUserAchieveRespMsg;
class SetUserProfileReqMsg;
class SetUserProfileRespMsg;

// ===================================================================

class GetUserProfileReqMsg : public ::google::protobuf::Message {
 public:
  GetUserProfileReqMsg();
  virtual ~GetUserProfileReqMsg();

  GetUserProfileReqMsg(const GetUserProfileReqMsg& from);

  inline GetUserProfileReqMsg& operator=(const GetUserProfileReqMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUserProfileReqMsg& default_instance();

  void Swap(GetUserProfileReqMsg* other);

  // implements Message ----------------------------------------------

  GetUserProfileReqMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetUserProfileReqMsg& from);
  void MergeFrom(const GetUserProfileReqMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // optional string session_token = 2;
  inline bool has_session_token() const;
  inline void clear_session_token();
  static const int kSessionTokenFieldNumber = 2;
  inline const ::std::string& session_token() const;
  inline void set_session_token(const ::std::string& value);
  inline void set_session_token(const char* value);
  inline void set_session_token(const char* value, size_t size);
  inline ::std::string* mutable_session_token();
  inline ::std::string* release_session_token();
  inline void set_allocated_session_token(::std::string* session_token);

  // optional .Cell.UserProfileType usr_prf_type = 3;
  inline bool has_usr_prf_type() const;
  inline void clear_usr_prf_type();
  static const int kUsrPrfTypeFieldNumber = 3;
  inline ::Cell::UserProfileType usr_prf_type() const;
  inline void set_usr_prf_type(::Cell::UserProfileType value);

  // optional uint32 org_uid = 4;
  inline bool has_org_uid() const;
  inline void clear_org_uid();
  static const int kOrgUidFieldNumber = 4;
  inline ::google::protobuf::uint32 org_uid() const;
  inline void set_org_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cell.GetUserProfileReqMsg)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_session_token();
  inline void clear_has_session_token();
  inline void set_has_usr_prf_type();
  inline void clear_has_usr_prf_type();
  inline void set_has_org_uid();
  inline void clear_has_org_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* session_token_;
  ::google::protobuf::uint32 uid_;
  int usr_prf_type_;
  ::google::protobuf::uint32 org_uid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_account_2eproto();
  friend void protobuf_AssignDesc_account_2eproto();
  friend void protobuf_ShutdownFile_account_2eproto();

  void InitAsDefaultInstance();
  static GetUserProfileReqMsg* default_instance_;
};
// -------------------------------------------------------------------

class GetUserProfileRespMsg : public ::google::protobuf::Message {
 public:
  GetUserProfileRespMsg();
  virtual ~GetUserProfileRespMsg();

  GetUserProfileRespMsg(const GetUserProfileRespMsg& from);

  inline GetUserProfileRespMsg& operator=(const GetUserProfileRespMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUserProfileRespMsg& default_instance();

  void Swap(GetUserProfileRespMsg* other);

  // implements Message ----------------------------------------------

  GetUserProfileRespMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetUserProfileRespMsg& from);
  void MergeFrom(const GetUserProfileRespMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Cell.RetCode ret_code = 1;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  inline ::Cell::RetCode ret_code() const;
  inline void set_ret_code(::Cell::RetCode value);

  // optional string phone = 2;
  inline bool has_phone() const;
  inline void clear_phone();
  static const int kPhoneFieldNumber = 2;
  inline const ::std::string& phone() const;
  inline void set_phone(const ::std::string& value);
  inline void set_phone(const char* value);
  inline void set_phone(const char* value, size_t size);
  inline ::std::string* mutable_phone();
  inline ::std::string* release_phone();
  inline void set_allocated_phone(::std::string* phone);

  // optional string email = 3;
  inline bool has_email() const;
  inline void clear_email();
  static const int kEmailFieldNumber = 3;
  inline const ::std::string& email() const;
  inline void set_email(const ::std::string& value);
  inline void set_email(const char* value);
  inline void set_email(const char* value, size_t size);
  inline ::std::string* mutable_email();
  inline ::std::string* release_email();
  inline void set_allocated_email(::std::string* email);

  // optional .Cell.Gender gender = 4;
  inline bool has_gender() const;
  inline void clear_gender();
  static const int kGenderFieldNumber = 4;
  inline ::Cell::Gender gender() const;
  inline void set_gender(::Cell::Gender value);

  // optional string birthday = 5;
  inline bool has_birthday() const;
  inline void clear_birthday();
  static const int kBirthdayFieldNumber = 5;
  inline const ::std::string& birthday() const;
  inline void set_birthday(const ::std::string& value);
  inline void set_birthday(const char* value);
  inline void set_birthday(const char* value, size_t size);
  inline ::std::string* mutable_birthday();
  inline ::std::string* release_birthday();
  inline void set_allocated_birthday(::std::string* birthday);

  // optional string avada_url = 6;
  inline bool has_avada_url() const;
  inline void clear_avada_url();
  static const int kAvadaUrlFieldNumber = 6;
  inline const ::std::string& avada_url() const;
  inline void set_avada_url(const ::std::string& value);
  inline void set_avada_url(const char* value);
  inline void set_avada_url(const char* value, size_t size);
  inline ::std::string* mutable_avada_url();
  inline ::std::string* release_avada_url();
  inline void set_allocated_avada_url(::std::string* avada_url);

  // optional string usr_name = 7;
  inline bool has_usr_name() const;
  inline void clear_usr_name();
  static const int kUsrNameFieldNumber = 7;
  inline const ::std::string& usr_name() const;
  inline void set_usr_name(const ::std::string& value);
  inline void set_usr_name(const char* value);
  inline void set_usr_name(const char* value, size_t size);
  inline ::std::string* mutable_usr_name();
  inline ::std::string* release_usr_name();
  inline void set_allocated_usr_name(::std::string* usr_name);

  // optional string avada_size = 8;
  inline bool has_avada_size() const;
  inline void clear_avada_size();
  static const int kAvadaSizeFieldNumber = 8;
  inline const ::std::string& avada_size() const;
  inline void set_avada_size(const ::std::string& value);
  inline void set_avada_size(const char* value);
  inline void set_avada_size(const char* value, size_t size);
  inline ::std::string* mutable_avada_size();
  inline ::std::string* release_avada_size();
  inline void set_allocated_avada_size(::std::string* avada_size);

  // optional .Cell.BloodType blood_type = 9;
  inline bool has_blood_type() const;
  inline void clear_blood_type();
  static const int kBloodTypeFieldNumber = 9;
  inline ::Cell::BloodType blood_type() const;
  inline void set_blood_type(::Cell::BloodType value);

  // optional .Cell.ConstellationType constellation = 10;
  inline bool has_constellation() const;
  inline void clear_constellation();
  static const int kConstellationFieldNumber = 10;
  inline ::Cell::ConstellationType constellation() const;
  inline void set_constellation(::Cell::ConstellationType value);

  // optional .Cell.ZodiacType zodiac = 11;
  inline bool has_zodiac() const;
  inline void clear_zodiac();
  static const int kZodiacFieldNumber = 11;
  inline ::Cell::ZodiacType zodiac() const;
  inline void set_zodiac(::Cell::ZodiacType value);

  // @@protoc_insertion_point(class_scope:Cell.GetUserProfileRespMsg)
 private:
  inline void set_has_ret_code();
  inline void clear_has_ret_code();
  inline void set_has_phone();
  inline void clear_has_phone();
  inline void set_has_email();
  inline void clear_has_email();
  inline void set_has_gender();
  inline void clear_has_gender();
  inline void set_has_birthday();
  inline void clear_has_birthday();
  inline void set_has_avada_url();
  inline void clear_has_avada_url();
  inline void set_has_usr_name();
  inline void clear_has_usr_name();
  inline void set_has_avada_size();
  inline void clear_has_avada_size();
  inline void set_has_blood_type();
  inline void clear_has_blood_type();
  inline void set_has_constellation();
  inline void clear_has_constellation();
  inline void set_has_zodiac();
  inline void clear_has_zodiac();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* phone_;
  int ret_code_;
  int gender_;
  ::std::string* email_;
  ::std::string* birthday_;
  ::std::string* avada_url_;
  ::std::string* usr_name_;
  ::std::string* avada_size_;
  int blood_type_;
  int constellation_;
  int zodiac_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  friend void  protobuf_AddDesc_account_2eproto();
  friend void protobuf_AssignDesc_account_2eproto();
  friend void protobuf_ShutdownFile_account_2eproto();

  void InitAsDefaultInstance();
  static GetUserProfileRespMsg* default_instance_;
};
// -------------------------------------------------------------------

class GetUserAchieveRespMsg : public ::google::protobuf::Message {
 public:
  GetUserAchieveRespMsg();
  virtual ~GetUserAchieveRespMsg();

  GetUserAchieveRespMsg(const GetUserAchieveRespMsg& from);

  inline GetUserAchieveRespMsg& operator=(const GetUserAchieveRespMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUserAchieveRespMsg& default_instance();

  void Swap(GetUserAchieveRespMsg* other);

  // implements Message ----------------------------------------------

  GetUserAchieveRespMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetUserAchieveRespMsg& from);
  void MergeFrom(const GetUserAchieveRespMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Cell.RetCode ret_code = 1;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  inline ::Cell::RetCode ret_code() const;
  inline void set_ret_code(::Cell::RetCode value);

  // optional uint32 create_ugc_num = 2;
  inline bool has_create_ugc_num() const;
  inline void clear_create_ugc_num();
  static const int kCreateUgcNumFieldNumber = 2;
  inline ::google::protobuf::uint32 create_ugc_num() const;
  inline void set_create_ugc_num(::google::protobuf::uint32 value);

  // optional uint32 post_ugc_num = 3;
  inline bool has_post_ugc_num() const;
  inline void clear_post_ugc_num();
  static const int kPostUgcNumFieldNumber = 3;
  inline ::google::protobuf::uint32 post_ugc_num() const;
  inline void set_post_ugc_num(::google::protobuf::uint32 value);

  // optional uint32 pass_ugc_num = 4;
  inline bool has_pass_ugc_num() const;
  inline void clear_pass_ugc_num();
  static const int kPassUgcNumFieldNumber = 4;
  inline ::google::protobuf::uint32 pass_ugc_num() const;
  inline void set_pass_ugc_num(::google::protobuf::uint32 value);

  // optional uint32 total_post_dist = 5;
  inline bool has_total_post_dist() const;
  inline void clear_total_post_dist();
  static const int kTotalPostDistFieldNumber = 5;
  inline ::google::protobuf::uint32 total_post_dist() const;
  inline void set_total_post_dist(::google::protobuf::uint32 value);

  // optional uint32 max_post_dist = 6;
  inline bool has_max_post_dist() const;
  inline void clear_max_post_dist();
  static const int kMaxPostDistFieldNumber = 6;
  inline ::google::protobuf::uint32 max_post_dist() const;
  inline void set_max_post_dist(::google::protobuf::uint32 value);

  // optional uint32 ugc_seed_num = 7;
  inline bool has_ugc_seed_num() const;
  inline void clear_ugc_seed_num();
  static const int kUgcSeedNumFieldNumber = 7;
  inline ::google::protobuf::uint32 ugc_seed_num() const;
  inline void set_ugc_seed_num(::google::protobuf::uint32 value);

  // optional int64 pk_coin = 8;
  inline bool has_pk_coin() const;
  inline void clear_pk_coin();
  static const int kPkCoinFieldNumber = 8;
  inline ::google::protobuf::int64 pk_coin() const;
  inline void set_pk_coin(::google::protobuf::int64 value);

  // optional uint32 pk_win_num = 9;
  inline bool has_pk_win_num() const;
  inline void clear_pk_win_num();
  static const int kPkWinNumFieldNumber = 9;
  inline ::google::protobuf::uint32 pk_win_num() const;
  inline void set_pk_win_num(::google::protobuf::uint32 value);

  // optional uint32 pk_lose_num = 10;
  inline bool has_pk_lose_num() const;
  inline void clear_pk_lose_num();
  static const int kPkLoseNumFieldNumber = 10;
  inline ::google::protobuf::uint32 pk_lose_num() const;
  inline void set_pk_lose_num(::google::protobuf::uint32 value);

  // optional uint32 pk_rank = 11;
  inline bool has_pk_rank() const;
  inline void clear_pk_rank();
  static const int kPkRankFieldNumber = 11;
  inline ::google::protobuf::uint32 pk_rank() const;
  inline void set_pk_rank(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cell.GetUserAchieveRespMsg)
 private:
  inline void set_has_ret_code();
  inline void clear_has_ret_code();
  inline void set_has_create_ugc_num();
  inline void clear_has_create_ugc_num();
  inline void set_has_post_ugc_num();
  inline void clear_has_post_ugc_num();
  inline void set_has_pass_ugc_num();
  inline void clear_has_pass_ugc_num();
  inline void set_has_total_post_dist();
  inline void clear_has_total_post_dist();
  inline void set_has_max_post_dist();
  inline void clear_has_max_post_dist();
  inline void set_has_ugc_seed_num();
  inline void clear_has_ugc_seed_num();
  inline void set_has_pk_coin();
  inline void clear_has_pk_coin();
  inline void set_has_pk_win_num();
  inline void clear_has_pk_win_num();
  inline void set_has_pk_lose_num();
  inline void clear_has_pk_lose_num();
  inline void set_has_pk_rank();
  inline void clear_has_pk_rank();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int ret_code_;
  ::google::protobuf::uint32 create_ugc_num_;
  ::google::protobuf::uint32 post_ugc_num_;
  ::google::protobuf::uint32 pass_ugc_num_;
  ::google::protobuf::uint32 total_post_dist_;
  ::google::protobuf::uint32 max_post_dist_;
  ::google::protobuf::int64 pk_coin_;
  ::google::protobuf::uint32 ugc_seed_num_;
  ::google::protobuf::uint32 pk_win_num_;
  ::google::protobuf::uint32 pk_lose_num_;
  ::google::protobuf::uint32 pk_rank_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  friend void  protobuf_AddDesc_account_2eproto();
  friend void protobuf_AssignDesc_account_2eproto();
  friend void protobuf_ShutdownFile_account_2eproto();

  void InitAsDefaultInstance();
  static GetUserAchieveRespMsg* default_instance_;
};
// -------------------------------------------------------------------

class SetUserProfileReqMsg : public ::google::protobuf::Message {
 public:
  SetUserProfileReqMsg();
  virtual ~SetUserProfileReqMsg();

  SetUserProfileReqMsg(const SetUserProfileReqMsg& from);

  inline SetUserProfileReqMsg& operator=(const SetUserProfileReqMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetUserProfileReqMsg& default_instance();

  void Swap(SetUserProfileReqMsg* other);

  // implements Message ----------------------------------------------

  SetUserProfileReqMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetUserProfileReqMsg& from);
  void MergeFrom(const SetUserProfileReqMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // optional string session_token = 2;
  inline bool has_session_token() const;
  inline void clear_session_token();
  static const int kSessionTokenFieldNumber = 2;
  inline const ::std::string& session_token() const;
  inline void set_session_token(const ::std::string& value);
  inline void set_session_token(const char* value);
  inline void set_session_token(const char* value, size_t size);
  inline ::std::string* mutable_session_token();
  inline ::std::string* release_session_token();
  inline void set_allocated_session_token(::std::string* session_token);

  // optional string avada_url = 3;
  inline bool has_avada_url() const;
  inline void clear_avada_url();
  static const int kAvadaUrlFieldNumber = 3;
  inline const ::std::string& avada_url() const;
  inline void set_avada_url(const ::std::string& value);
  inline void set_avada_url(const char* value);
  inline void set_avada_url(const char* value, size_t size);
  inline ::std::string* mutable_avada_url();
  inline ::std::string* release_avada_url();
  inline void set_allocated_avada_url(::std::string* avada_url);

  // optional string usr_name = 4;
  inline bool has_usr_name() const;
  inline void clear_usr_name();
  static const int kUsrNameFieldNumber = 4;
  inline const ::std::string& usr_name() const;
  inline void set_usr_name(const ::std::string& value);
  inline void set_usr_name(const char* value);
  inline void set_usr_name(const char* value, size_t size);
  inline ::std::string* mutable_usr_name();
  inline ::std::string* release_usr_name();
  inline void set_allocated_usr_name(::std::string* usr_name);

  // optional string avada_size = 5;
  inline bool has_avada_size() const;
  inline void clear_avada_size();
  static const int kAvadaSizeFieldNumber = 5;
  inline const ::std::string& avada_size() const;
  inline void set_avada_size(const ::std::string& value);
  inline void set_avada_size(const char* value);
  inline void set_avada_size(const char* value, size_t size);
  inline ::std::string* mutable_avada_size();
  inline ::std::string* release_avada_size();
  inline void set_allocated_avada_size(::std::string* avada_size);

  // @@protoc_insertion_point(class_scope:Cell.SetUserProfileReqMsg)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_session_token();
  inline void clear_has_session_token();
  inline void set_has_avada_url();
  inline void clear_has_avada_url();
  inline void set_has_usr_name();
  inline void clear_has_usr_name();
  inline void set_has_avada_size();
  inline void clear_has_avada_size();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* session_token_;
  ::std::string* avada_url_;
  ::std::string* usr_name_;
  ::std::string* avada_size_;
  ::google::protobuf::uint32 uid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_account_2eproto();
  friend void protobuf_AssignDesc_account_2eproto();
  friend void protobuf_ShutdownFile_account_2eproto();

  void InitAsDefaultInstance();
  static SetUserProfileReqMsg* default_instance_;
};
// -------------------------------------------------------------------

class SetUserProfileRespMsg : public ::google::protobuf::Message {
 public:
  SetUserProfileRespMsg();
  virtual ~SetUserProfileRespMsg();

  SetUserProfileRespMsg(const SetUserProfileRespMsg& from);

  inline SetUserProfileRespMsg& operator=(const SetUserProfileRespMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetUserProfileRespMsg& default_instance();

  void Swap(SetUserProfileRespMsg* other);

  // implements Message ----------------------------------------------

  SetUserProfileRespMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetUserProfileRespMsg& from);
  void MergeFrom(const SetUserProfileRespMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Cell.RetCode ret_code = 1;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  inline ::Cell::RetCode ret_code() const;
  inline void set_ret_code(::Cell::RetCode value);

  // @@protoc_insertion_point(class_scope:Cell.SetUserProfileRespMsg)
 private:
  inline void set_has_ret_code();
  inline void clear_has_ret_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int ret_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_account_2eproto();
  friend void protobuf_AssignDesc_account_2eproto();
  friend void protobuf_ShutdownFile_account_2eproto();

  void InitAsDefaultInstance();
  static SetUserProfileRespMsg* default_instance_;
};
// ===================================================================


// ===================================================================

// GetUserProfileReqMsg

// optional uint32 uid = 1;
inline bool GetUserProfileReqMsg::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetUserProfileReqMsg::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetUserProfileReqMsg::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetUserProfileReqMsg::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 GetUserProfileReqMsg::uid() const {
  return uid_;
}
inline void GetUserProfileReqMsg::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// optional string session_token = 2;
inline bool GetUserProfileReqMsg::has_session_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetUserProfileReqMsg::set_has_session_token() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetUserProfileReqMsg::clear_has_session_token() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetUserProfileReqMsg::clear_session_token() {
  if (session_token_ != &::google::protobuf::internal::kEmptyString) {
    session_token_->clear();
  }
  clear_has_session_token();
}
inline const ::std::string& GetUserProfileReqMsg::session_token() const {
  return *session_token_;
}
inline void GetUserProfileReqMsg::set_session_token(const ::std::string& value) {
  set_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    session_token_ = new ::std::string;
  }
  session_token_->assign(value);
}
inline void GetUserProfileReqMsg::set_session_token(const char* value) {
  set_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    session_token_ = new ::std::string;
  }
  session_token_->assign(value);
}
inline void GetUserProfileReqMsg::set_session_token(const char* value, size_t size) {
  set_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    session_token_ = new ::std::string;
  }
  session_token_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetUserProfileReqMsg::mutable_session_token() {
  set_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    session_token_ = new ::std::string;
  }
  return session_token_;
}
inline ::std::string* GetUserProfileReqMsg::release_session_token() {
  clear_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = session_token_;
    session_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GetUserProfileReqMsg::set_allocated_session_token(::std::string* session_token) {
  if (session_token_ != &::google::protobuf::internal::kEmptyString) {
    delete session_token_;
  }
  if (session_token) {
    set_has_session_token();
    session_token_ = session_token;
  } else {
    clear_has_session_token();
    session_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .Cell.UserProfileType usr_prf_type = 3;
inline bool GetUserProfileReqMsg::has_usr_prf_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetUserProfileReqMsg::set_has_usr_prf_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetUserProfileReqMsg::clear_has_usr_prf_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetUserProfileReqMsg::clear_usr_prf_type() {
  usr_prf_type_ = 0;
  clear_has_usr_prf_type();
}
inline ::Cell::UserProfileType GetUserProfileReqMsg::usr_prf_type() const {
  return static_cast< ::Cell::UserProfileType >(usr_prf_type_);
}
inline void GetUserProfileReqMsg::set_usr_prf_type(::Cell::UserProfileType value) {
  assert(::Cell::UserProfileType_IsValid(value));
  set_has_usr_prf_type();
  usr_prf_type_ = value;
}

// optional uint32 org_uid = 4;
inline bool GetUserProfileReqMsg::has_org_uid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetUserProfileReqMsg::set_has_org_uid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetUserProfileReqMsg::clear_has_org_uid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetUserProfileReqMsg::clear_org_uid() {
  org_uid_ = 0u;
  clear_has_org_uid();
}
inline ::google::protobuf::uint32 GetUserProfileReqMsg::org_uid() const {
  return org_uid_;
}
inline void GetUserProfileReqMsg::set_org_uid(::google::protobuf::uint32 value) {
  set_has_org_uid();
  org_uid_ = value;
}

// -------------------------------------------------------------------

// GetUserProfileRespMsg

// required .Cell.RetCode ret_code = 1;
inline bool GetUserProfileRespMsg::has_ret_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetUserProfileRespMsg::set_has_ret_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetUserProfileRespMsg::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetUserProfileRespMsg::clear_ret_code() {
  ret_code_ = 0;
  clear_has_ret_code();
}
inline ::Cell::RetCode GetUserProfileRespMsg::ret_code() const {
  return static_cast< ::Cell::RetCode >(ret_code_);
}
inline void GetUserProfileRespMsg::set_ret_code(::Cell::RetCode value) {
  assert(::Cell::RetCode_IsValid(value));
  set_has_ret_code();
  ret_code_ = value;
}

// optional string phone = 2;
inline bool GetUserProfileRespMsg::has_phone() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetUserProfileRespMsg::set_has_phone() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetUserProfileRespMsg::clear_has_phone() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetUserProfileRespMsg::clear_phone() {
  if (phone_ != &::google::protobuf::internal::kEmptyString) {
    phone_->clear();
  }
  clear_has_phone();
}
inline const ::std::string& GetUserProfileRespMsg::phone() const {
  return *phone_;
}
inline void GetUserProfileRespMsg::set_phone(const ::std::string& value) {
  set_has_phone();
  if (phone_ == &::google::protobuf::internal::kEmptyString) {
    phone_ = new ::std::string;
  }
  phone_->assign(value);
}
inline void GetUserProfileRespMsg::set_phone(const char* value) {
  set_has_phone();
  if (phone_ == &::google::protobuf::internal::kEmptyString) {
    phone_ = new ::std::string;
  }
  phone_->assign(value);
}
inline void GetUserProfileRespMsg::set_phone(const char* value, size_t size) {
  set_has_phone();
  if (phone_ == &::google::protobuf::internal::kEmptyString) {
    phone_ = new ::std::string;
  }
  phone_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetUserProfileRespMsg::mutable_phone() {
  set_has_phone();
  if (phone_ == &::google::protobuf::internal::kEmptyString) {
    phone_ = new ::std::string;
  }
  return phone_;
}
inline ::std::string* GetUserProfileRespMsg::release_phone() {
  clear_has_phone();
  if (phone_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = phone_;
    phone_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GetUserProfileRespMsg::set_allocated_phone(::std::string* phone) {
  if (phone_ != &::google::protobuf::internal::kEmptyString) {
    delete phone_;
  }
  if (phone) {
    set_has_phone();
    phone_ = phone;
  } else {
    clear_has_phone();
    phone_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string email = 3;
inline bool GetUserProfileRespMsg::has_email() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetUserProfileRespMsg::set_has_email() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetUserProfileRespMsg::clear_has_email() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetUserProfileRespMsg::clear_email() {
  if (email_ != &::google::protobuf::internal::kEmptyString) {
    email_->clear();
  }
  clear_has_email();
}
inline const ::std::string& GetUserProfileRespMsg::email() const {
  return *email_;
}
inline void GetUserProfileRespMsg::set_email(const ::std::string& value) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::kEmptyString) {
    email_ = new ::std::string;
  }
  email_->assign(value);
}
inline void GetUserProfileRespMsg::set_email(const char* value) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::kEmptyString) {
    email_ = new ::std::string;
  }
  email_->assign(value);
}
inline void GetUserProfileRespMsg::set_email(const char* value, size_t size) {
  set_has_email();
  if (email_ == &::google::protobuf::internal::kEmptyString) {
    email_ = new ::std::string;
  }
  email_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetUserProfileRespMsg::mutable_email() {
  set_has_email();
  if (email_ == &::google::protobuf::internal::kEmptyString) {
    email_ = new ::std::string;
  }
  return email_;
}
inline ::std::string* GetUserProfileRespMsg::release_email() {
  clear_has_email();
  if (email_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = email_;
    email_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GetUserProfileRespMsg::set_allocated_email(::std::string* email) {
  if (email_ != &::google::protobuf::internal::kEmptyString) {
    delete email_;
  }
  if (email) {
    set_has_email();
    email_ = email;
  } else {
    clear_has_email();
    email_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .Cell.Gender gender = 4;
inline bool GetUserProfileRespMsg::has_gender() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetUserProfileRespMsg::set_has_gender() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetUserProfileRespMsg::clear_has_gender() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetUserProfileRespMsg::clear_gender() {
  gender_ = 0;
  clear_has_gender();
}
inline ::Cell::Gender GetUserProfileRespMsg::gender() const {
  return static_cast< ::Cell::Gender >(gender_);
}
inline void GetUserProfileRespMsg::set_gender(::Cell::Gender value) {
  assert(::Cell::Gender_IsValid(value));
  set_has_gender();
  gender_ = value;
}

// optional string birthday = 5;
inline bool GetUserProfileRespMsg::has_birthday() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetUserProfileRespMsg::set_has_birthday() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetUserProfileRespMsg::clear_has_birthday() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetUserProfileRespMsg::clear_birthday() {
  if (birthday_ != &::google::protobuf::internal::kEmptyString) {
    birthday_->clear();
  }
  clear_has_birthday();
}
inline const ::std::string& GetUserProfileRespMsg::birthday() const {
  return *birthday_;
}
inline void GetUserProfileRespMsg::set_birthday(const ::std::string& value) {
  set_has_birthday();
  if (birthday_ == &::google::protobuf::internal::kEmptyString) {
    birthday_ = new ::std::string;
  }
  birthday_->assign(value);
}
inline void GetUserProfileRespMsg::set_birthday(const char* value) {
  set_has_birthday();
  if (birthday_ == &::google::protobuf::internal::kEmptyString) {
    birthday_ = new ::std::string;
  }
  birthday_->assign(value);
}
inline void GetUserProfileRespMsg::set_birthday(const char* value, size_t size) {
  set_has_birthday();
  if (birthday_ == &::google::protobuf::internal::kEmptyString) {
    birthday_ = new ::std::string;
  }
  birthday_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetUserProfileRespMsg::mutable_birthday() {
  set_has_birthday();
  if (birthday_ == &::google::protobuf::internal::kEmptyString) {
    birthday_ = new ::std::string;
  }
  return birthday_;
}
inline ::std::string* GetUserProfileRespMsg::release_birthday() {
  clear_has_birthday();
  if (birthday_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = birthday_;
    birthday_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GetUserProfileRespMsg::set_allocated_birthday(::std::string* birthday) {
  if (birthday_ != &::google::protobuf::internal::kEmptyString) {
    delete birthday_;
  }
  if (birthday) {
    set_has_birthday();
    birthday_ = birthday;
  } else {
    clear_has_birthday();
    birthday_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string avada_url = 6;
inline bool GetUserProfileRespMsg::has_avada_url() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GetUserProfileRespMsg::set_has_avada_url() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GetUserProfileRespMsg::clear_has_avada_url() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GetUserProfileRespMsg::clear_avada_url() {
  if (avada_url_ != &::google::protobuf::internal::kEmptyString) {
    avada_url_->clear();
  }
  clear_has_avada_url();
}
inline const ::std::string& GetUserProfileRespMsg::avada_url() const {
  return *avada_url_;
}
inline void GetUserProfileRespMsg::set_avada_url(const ::std::string& value) {
  set_has_avada_url();
  if (avada_url_ == &::google::protobuf::internal::kEmptyString) {
    avada_url_ = new ::std::string;
  }
  avada_url_->assign(value);
}
inline void GetUserProfileRespMsg::set_avada_url(const char* value) {
  set_has_avada_url();
  if (avada_url_ == &::google::protobuf::internal::kEmptyString) {
    avada_url_ = new ::std::string;
  }
  avada_url_->assign(value);
}
inline void GetUserProfileRespMsg::set_avada_url(const char* value, size_t size) {
  set_has_avada_url();
  if (avada_url_ == &::google::protobuf::internal::kEmptyString) {
    avada_url_ = new ::std::string;
  }
  avada_url_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetUserProfileRespMsg::mutable_avada_url() {
  set_has_avada_url();
  if (avada_url_ == &::google::protobuf::internal::kEmptyString) {
    avada_url_ = new ::std::string;
  }
  return avada_url_;
}
inline ::std::string* GetUserProfileRespMsg::release_avada_url() {
  clear_has_avada_url();
  if (avada_url_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = avada_url_;
    avada_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GetUserProfileRespMsg::set_allocated_avada_url(::std::string* avada_url) {
  if (avada_url_ != &::google::protobuf::internal::kEmptyString) {
    delete avada_url_;
  }
  if (avada_url) {
    set_has_avada_url();
    avada_url_ = avada_url;
  } else {
    clear_has_avada_url();
    avada_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string usr_name = 7;
inline bool GetUserProfileRespMsg::has_usr_name() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GetUserProfileRespMsg::set_has_usr_name() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GetUserProfileRespMsg::clear_has_usr_name() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GetUserProfileRespMsg::clear_usr_name() {
  if (usr_name_ != &::google::protobuf::internal::kEmptyString) {
    usr_name_->clear();
  }
  clear_has_usr_name();
}
inline const ::std::string& GetUserProfileRespMsg::usr_name() const {
  return *usr_name_;
}
inline void GetUserProfileRespMsg::set_usr_name(const ::std::string& value) {
  set_has_usr_name();
  if (usr_name_ == &::google::protobuf::internal::kEmptyString) {
    usr_name_ = new ::std::string;
  }
  usr_name_->assign(value);
}
inline void GetUserProfileRespMsg::set_usr_name(const char* value) {
  set_has_usr_name();
  if (usr_name_ == &::google::protobuf::internal::kEmptyString) {
    usr_name_ = new ::std::string;
  }
  usr_name_->assign(value);
}
inline void GetUserProfileRespMsg::set_usr_name(const char* value, size_t size) {
  set_has_usr_name();
  if (usr_name_ == &::google::protobuf::internal::kEmptyString) {
    usr_name_ = new ::std::string;
  }
  usr_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetUserProfileRespMsg::mutable_usr_name() {
  set_has_usr_name();
  if (usr_name_ == &::google::protobuf::internal::kEmptyString) {
    usr_name_ = new ::std::string;
  }
  return usr_name_;
}
inline ::std::string* GetUserProfileRespMsg::release_usr_name() {
  clear_has_usr_name();
  if (usr_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = usr_name_;
    usr_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GetUserProfileRespMsg::set_allocated_usr_name(::std::string* usr_name) {
  if (usr_name_ != &::google::protobuf::internal::kEmptyString) {
    delete usr_name_;
  }
  if (usr_name) {
    set_has_usr_name();
    usr_name_ = usr_name;
  } else {
    clear_has_usr_name();
    usr_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string avada_size = 8;
inline bool GetUserProfileRespMsg::has_avada_size() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GetUserProfileRespMsg::set_has_avada_size() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GetUserProfileRespMsg::clear_has_avada_size() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GetUserProfileRespMsg::clear_avada_size() {
  if (avada_size_ != &::google::protobuf::internal::kEmptyString) {
    avada_size_->clear();
  }
  clear_has_avada_size();
}
inline const ::std::string& GetUserProfileRespMsg::avada_size() const {
  return *avada_size_;
}
inline void GetUserProfileRespMsg::set_avada_size(const ::std::string& value) {
  set_has_avada_size();
  if (avada_size_ == &::google::protobuf::internal::kEmptyString) {
    avada_size_ = new ::std::string;
  }
  avada_size_->assign(value);
}
inline void GetUserProfileRespMsg::set_avada_size(const char* value) {
  set_has_avada_size();
  if (avada_size_ == &::google::protobuf::internal::kEmptyString) {
    avada_size_ = new ::std::string;
  }
  avada_size_->assign(value);
}
inline void GetUserProfileRespMsg::set_avada_size(const char* value, size_t size) {
  set_has_avada_size();
  if (avada_size_ == &::google::protobuf::internal::kEmptyString) {
    avada_size_ = new ::std::string;
  }
  avada_size_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetUserProfileRespMsg::mutable_avada_size() {
  set_has_avada_size();
  if (avada_size_ == &::google::protobuf::internal::kEmptyString) {
    avada_size_ = new ::std::string;
  }
  return avada_size_;
}
inline ::std::string* GetUserProfileRespMsg::release_avada_size() {
  clear_has_avada_size();
  if (avada_size_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = avada_size_;
    avada_size_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GetUserProfileRespMsg::set_allocated_avada_size(::std::string* avada_size) {
  if (avada_size_ != &::google::protobuf::internal::kEmptyString) {
    delete avada_size_;
  }
  if (avada_size) {
    set_has_avada_size();
    avada_size_ = avada_size;
  } else {
    clear_has_avada_size();
    avada_size_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .Cell.BloodType blood_type = 9;
inline bool GetUserProfileRespMsg::has_blood_type() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GetUserProfileRespMsg::set_has_blood_type() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GetUserProfileRespMsg::clear_has_blood_type() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GetUserProfileRespMsg::clear_blood_type() {
  blood_type_ = 1;
  clear_has_blood_type();
}
inline ::Cell::BloodType GetUserProfileRespMsg::blood_type() const {
  return static_cast< ::Cell::BloodType >(blood_type_);
}
inline void GetUserProfileRespMsg::set_blood_type(::Cell::BloodType value) {
  assert(::Cell::BloodType_IsValid(value));
  set_has_blood_type();
  blood_type_ = value;
}

// optional .Cell.ConstellationType constellation = 10;
inline bool GetUserProfileRespMsg::has_constellation() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GetUserProfileRespMsg::set_has_constellation() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GetUserProfileRespMsg::clear_has_constellation() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GetUserProfileRespMsg::clear_constellation() {
  constellation_ = 1;
  clear_has_constellation();
}
inline ::Cell::ConstellationType GetUserProfileRespMsg::constellation() const {
  return static_cast< ::Cell::ConstellationType >(constellation_);
}
inline void GetUserProfileRespMsg::set_constellation(::Cell::ConstellationType value) {
  assert(::Cell::ConstellationType_IsValid(value));
  set_has_constellation();
  constellation_ = value;
}

// optional .Cell.ZodiacType zodiac = 11;
inline bool GetUserProfileRespMsg::has_zodiac() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GetUserProfileRespMsg::set_has_zodiac() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GetUserProfileRespMsg::clear_has_zodiac() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GetUserProfileRespMsg::clear_zodiac() {
  zodiac_ = 1;
  clear_has_zodiac();
}
inline ::Cell::ZodiacType GetUserProfileRespMsg::zodiac() const {
  return static_cast< ::Cell::ZodiacType >(zodiac_);
}
inline void GetUserProfileRespMsg::set_zodiac(::Cell::ZodiacType value) {
  assert(::Cell::ZodiacType_IsValid(value));
  set_has_zodiac();
  zodiac_ = value;
}

// -------------------------------------------------------------------

// GetUserAchieveRespMsg

// required .Cell.RetCode ret_code = 1;
inline bool GetUserAchieveRespMsg::has_ret_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetUserAchieveRespMsg::set_has_ret_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetUserAchieveRespMsg::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetUserAchieveRespMsg::clear_ret_code() {
  ret_code_ = 0;
  clear_has_ret_code();
}
inline ::Cell::RetCode GetUserAchieveRespMsg::ret_code() const {
  return static_cast< ::Cell::RetCode >(ret_code_);
}
inline void GetUserAchieveRespMsg::set_ret_code(::Cell::RetCode value) {
  assert(::Cell::RetCode_IsValid(value));
  set_has_ret_code();
  ret_code_ = value;
}

// optional uint32 create_ugc_num = 2;
inline bool GetUserAchieveRespMsg::has_create_ugc_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetUserAchieveRespMsg::set_has_create_ugc_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetUserAchieveRespMsg::clear_has_create_ugc_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetUserAchieveRespMsg::clear_create_ugc_num() {
  create_ugc_num_ = 0u;
  clear_has_create_ugc_num();
}
inline ::google::protobuf::uint32 GetUserAchieveRespMsg::create_ugc_num() const {
  return create_ugc_num_;
}
inline void GetUserAchieveRespMsg::set_create_ugc_num(::google::protobuf::uint32 value) {
  set_has_create_ugc_num();
  create_ugc_num_ = value;
}

// optional uint32 post_ugc_num = 3;
inline bool GetUserAchieveRespMsg::has_post_ugc_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetUserAchieveRespMsg::set_has_post_ugc_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetUserAchieveRespMsg::clear_has_post_ugc_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetUserAchieveRespMsg::clear_post_ugc_num() {
  post_ugc_num_ = 0u;
  clear_has_post_ugc_num();
}
inline ::google::protobuf::uint32 GetUserAchieveRespMsg::post_ugc_num() const {
  return post_ugc_num_;
}
inline void GetUserAchieveRespMsg::set_post_ugc_num(::google::protobuf::uint32 value) {
  set_has_post_ugc_num();
  post_ugc_num_ = value;
}

// optional uint32 pass_ugc_num = 4;
inline bool GetUserAchieveRespMsg::has_pass_ugc_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetUserAchieveRespMsg::set_has_pass_ugc_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetUserAchieveRespMsg::clear_has_pass_ugc_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetUserAchieveRespMsg::clear_pass_ugc_num() {
  pass_ugc_num_ = 0u;
  clear_has_pass_ugc_num();
}
inline ::google::protobuf::uint32 GetUserAchieveRespMsg::pass_ugc_num() const {
  return pass_ugc_num_;
}
inline void GetUserAchieveRespMsg::set_pass_ugc_num(::google::protobuf::uint32 value) {
  set_has_pass_ugc_num();
  pass_ugc_num_ = value;
}

// optional uint32 total_post_dist = 5;
inline bool GetUserAchieveRespMsg::has_total_post_dist() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetUserAchieveRespMsg::set_has_total_post_dist() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetUserAchieveRespMsg::clear_has_total_post_dist() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetUserAchieveRespMsg::clear_total_post_dist() {
  total_post_dist_ = 0u;
  clear_has_total_post_dist();
}
inline ::google::protobuf::uint32 GetUserAchieveRespMsg::total_post_dist() const {
  return total_post_dist_;
}
inline void GetUserAchieveRespMsg::set_total_post_dist(::google::protobuf::uint32 value) {
  set_has_total_post_dist();
  total_post_dist_ = value;
}

// optional uint32 max_post_dist = 6;
inline bool GetUserAchieveRespMsg::has_max_post_dist() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GetUserAchieveRespMsg::set_has_max_post_dist() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GetUserAchieveRespMsg::clear_has_max_post_dist() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GetUserAchieveRespMsg::clear_max_post_dist() {
  max_post_dist_ = 0u;
  clear_has_max_post_dist();
}
inline ::google::protobuf::uint32 GetUserAchieveRespMsg::max_post_dist() const {
  return max_post_dist_;
}
inline void GetUserAchieveRespMsg::set_max_post_dist(::google::protobuf::uint32 value) {
  set_has_max_post_dist();
  max_post_dist_ = value;
}

// optional uint32 ugc_seed_num = 7;
inline bool GetUserAchieveRespMsg::has_ugc_seed_num() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GetUserAchieveRespMsg::set_has_ugc_seed_num() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GetUserAchieveRespMsg::clear_has_ugc_seed_num() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GetUserAchieveRespMsg::clear_ugc_seed_num() {
  ugc_seed_num_ = 0u;
  clear_has_ugc_seed_num();
}
inline ::google::protobuf::uint32 GetUserAchieveRespMsg::ugc_seed_num() const {
  return ugc_seed_num_;
}
inline void GetUserAchieveRespMsg::set_ugc_seed_num(::google::protobuf::uint32 value) {
  set_has_ugc_seed_num();
  ugc_seed_num_ = value;
}

// optional int64 pk_coin = 8;
inline bool GetUserAchieveRespMsg::has_pk_coin() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void GetUserAchieveRespMsg::set_has_pk_coin() {
  _has_bits_[0] |= 0x00000080u;
}
inline void GetUserAchieveRespMsg::clear_has_pk_coin() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void GetUserAchieveRespMsg::clear_pk_coin() {
  pk_coin_ = GOOGLE_LONGLONG(0);
  clear_has_pk_coin();
}
inline ::google::protobuf::int64 GetUserAchieveRespMsg::pk_coin() const {
  return pk_coin_;
}
inline void GetUserAchieveRespMsg::set_pk_coin(::google::protobuf::int64 value) {
  set_has_pk_coin();
  pk_coin_ = value;
}

// optional uint32 pk_win_num = 9;
inline bool GetUserAchieveRespMsg::has_pk_win_num() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void GetUserAchieveRespMsg::set_has_pk_win_num() {
  _has_bits_[0] |= 0x00000100u;
}
inline void GetUserAchieveRespMsg::clear_has_pk_win_num() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void GetUserAchieveRespMsg::clear_pk_win_num() {
  pk_win_num_ = 0u;
  clear_has_pk_win_num();
}
inline ::google::protobuf::uint32 GetUserAchieveRespMsg::pk_win_num() const {
  return pk_win_num_;
}
inline void GetUserAchieveRespMsg::set_pk_win_num(::google::protobuf::uint32 value) {
  set_has_pk_win_num();
  pk_win_num_ = value;
}

// optional uint32 pk_lose_num = 10;
inline bool GetUserAchieveRespMsg::has_pk_lose_num() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void GetUserAchieveRespMsg::set_has_pk_lose_num() {
  _has_bits_[0] |= 0x00000200u;
}
inline void GetUserAchieveRespMsg::clear_has_pk_lose_num() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void GetUserAchieveRespMsg::clear_pk_lose_num() {
  pk_lose_num_ = 0u;
  clear_has_pk_lose_num();
}
inline ::google::protobuf::uint32 GetUserAchieveRespMsg::pk_lose_num() const {
  return pk_lose_num_;
}
inline void GetUserAchieveRespMsg::set_pk_lose_num(::google::protobuf::uint32 value) {
  set_has_pk_lose_num();
  pk_lose_num_ = value;
}

// optional uint32 pk_rank = 11;
inline bool GetUserAchieveRespMsg::has_pk_rank() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void GetUserAchieveRespMsg::set_has_pk_rank() {
  _has_bits_[0] |= 0x00000400u;
}
inline void GetUserAchieveRespMsg::clear_has_pk_rank() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void GetUserAchieveRespMsg::clear_pk_rank() {
  pk_rank_ = 0u;
  clear_has_pk_rank();
}
inline ::google::protobuf::uint32 GetUserAchieveRespMsg::pk_rank() const {
  return pk_rank_;
}
inline void GetUserAchieveRespMsg::set_pk_rank(::google::protobuf::uint32 value) {
  set_has_pk_rank();
  pk_rank_ = value;
}

// -------------------------------------------------------------------

// SetUserProfileReqMsg

// optional uint32 uid = 1;
inline bool SetUserProfileReqMsg::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetUserProfileReqMsg::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetUserProfileReqMsg::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetUserProfileReqMsg::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 SetUserProfileReqMsg::uid() const {
  return uid_;
}
inline void SetUserProfileReqMsg::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// optional string session_token = 2;
inline bool SetUserProfileReqMsg::has_session_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetUserProfileReqMsg::set_has_session_token() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetUserProfileReqMsg::clear_has_session_token() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetUserProfileReqMsg::clear_session_token() {
  if (session_token_ != &::google::protobuf::internal::kEmptyString) {
    session_token_->clear();
  }
  clear_has_session_token();
}
inline const ::std::string& SetUserProfileReqMsg::session_token() const {
  return *session_token_;
}
inline void SetUserProfileReqMsg::set_session_token(const ::std::string& value) {
  set_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    session_token_ = new ::std::string;
  }
  session_token_->assign(value);
}
inline void SetUserProfileReqMsg::set_session_token(const char* value) {
  set_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    session_token_ = new ::std::string;
  }
  session_token_->assign(value);
}
inline void SetUserProfileReqMsg::set_session_token(const char* value, size_t size) {
  set_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    session_token_ = new ::std::string;
  }
  session_token_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SetUserProfileReqMsg::mutable_session_token() {
  set_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    session_token_ = new ::std::string;
  }
  return session_token_;
}
inline ::std::string* SetUserProfileReqMsg::release_session_token() {
  clear_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = session_token_;
    session_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SetUserProfileReqMsg::set_allocated_session_token(::std::string* session_token) {
  if (session_token_ != &::google::protobuf::internal::kEmptyString) {
    delete session_token_;
  }
  if (session_token) {
    set_has_session_token();
    session_token_ = session_token;
  } else {
    clear_has_session_token();
    session_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string avada_url = 3;
inline bool SetUserProfileReqMsg::has_avada_url() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SetUserProfileReqMsg::set_has_avada_url() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SetUserProfileReqMsg::clear_has_avada_url() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SetUserProfileReqMsg::clear_avada_url() {
  if (avada_url_ != &::google::protobuf::internal::kEmptyString) {
    avada_url_->clear();
  }
  clear_has_avada_url();
}
inline const ::std::string& SetUserProfileReqMsg::avada_url() const {
  return *avada_url_;
}
inline void SetUserProfileReqMsg::set_avada_url(const ::std::string& value) {
  set_has_avada_url();
  if (avada_url_ == &::google::protobuf::internal::kEmptyString) {
    avada_url_ = new ::std::string;
  }
  avada_url_->assign(value);
}
inline void SetUserProfileReqMsg::set_avada_url(const char* value) {
  set_has_avada_url();
  if (avada_url_ == &::google::protobuf::internal::kEmptyString) {
    avada_url_ = new ::std::string;
  }
  avada_url_->assign(value);
}
inline void SetUserProfileReqMsg::set_avada_url(const char* value, size_t size) {
  set_has_avada_url();
  if (avada_url_ == &::google::protobuf::internal::kEmptyString) {
    avada_url_ = new ::std::string;
  }
  avada_url_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SetUserProfileReqMsg::mutable_avada_url() {
  set_has_avada_url();
  if (avada_url_ == &::google::protobuf::internal::kEmptyString) {
    avada_url_ = new ::std::string;
  }
  return avada_url_;
}
inline ::std::string* SetUserProfileReqMsg::release_avada_url() {
  clear_has_avada_url();
  if (avada_url_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = avada_url_;
    avada_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SetUserProfileReqMsg::set_allocated_avada_url(::std::string* avada_url) {
  if (avada_url_ != &::google::protobuf::internal::kEmptyString) {
    delete avada_url_;
  }
  if (avada_url) {
    set_has_avada_url();
    avada_url_ = avada_url;
  } else {
    clear_has_avada_url();
    avada_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string usr_name = 4;
inline bool SetUserProfileReqMsg::has_usr_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SetUserProfileReqMsg::set_has_usr_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SetUserProfileReqMsg::clear_has_usr_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SetUserProfileReqMsg::clear_usr_name() {
  if (usr_name_ != &::google::protobuf::internal::kEmptyString) {
    usr_name_->clear();
  }
  clear_has_usr_name();
}
inline const ::std::string& SetUserProfileReqMsg::usr_name() const {
  return *usr_name_;
}
inline void SetUserProfileReqMsg::set_usr_name(const ::std::string& value) {
  set_has_usr_name();
  if (usr_name_ == &::google::protobuf::internal::kEmptyString) {
    usr_name_ = new ::std::string;
  }
  usr_name_->assign(value);
}
inline void SetUserProfileReqMsg::set_usr_name(const char* value) {
  set_has_usr_name();
  if (usr_name_ == &::google::protobuf::internal::kEmptyString) {
    usr_name_ = new ::std::string;
  }
  usr_name_->assign(value);
}
inline void SetUserProfileReqMsg::set_usr_name(const char* value, size_t size) {
  set_has_usr_name();
  if (usr_name_ == &::google::protobuf::internal::kEmptyString) {
    usr_name_ = new ::std::string;
  }
  usr_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SetUserProfileReqMsg::mutable_usr_name() {
  set_has_usr_name();
  if (usr_name_ == &::google::protobuf::internal::kEmptyString) {
    usr_name_ = new ::std::string;
  }
  return usr_name_;
}
inline ::std::string* SetUserProfileReqMsg::release_usr_name() {
  clear_has_usr_name();
  if (usr_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = usr_name_;
    usr_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SetUserProfileReqMsg::set_allocated_usr_name(::std::string* usr_name) {
  if (usr_name_ != &::google::protobuf::internal::kEmptyString) {
    delete usr_name_;
  }
  if (usr_name) {
    set_has_usr_name();
    usr_name_ = usr_name;
  } else {
    clear_has_usr_name();
    usr_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string avada_size = 5;
inline bool SetUserProfileReqMsg::has_avada_size() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SetUserProfileReqMsg::set_has_avada_size() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SetUserProfileReqMsg::clear_has_avada_size() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SetUserProfileReqMsg::clear_avada_size() {
  if (avada_size_ != &::google::protobuf::internal::kEmptyString) {
    avada_size_->clear();
  }
  clear_has_avada_size();
}
inline const ::std::string& SetUserProfileReqMsg::avada_size() const {
  return *avada_size_;
}
inline void SetUserProfileReqMsg::set_avada_size(const ::std::string& value) {
  set_has_avada_size();
  if (avada_size_ == &::google::protobuf::internal::kEmptyString) {
    avada_size_ = new ::std::string;
  }
  avada_size_->assign(value);
}
inline void SetUserProfileReqMsg::set_avada_size(const char* value) {
  set_has_avada_size();
  if (avada_size_ == &::google::protobuf::internal::kEmptyString) {
    avada_size_ = new ::std::string;
  }
  avada_size_->assign(value);
}
inline void SetUserProfileReqMsg::set_avada_size(const char* value, size_t size) {
  set_has_avada_size();
  if (avada_size_ == &::google::protobuf::internal::kEmptyString) {
    avada_size_ = new ::std::string;
  }
  avada_size_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SetUserProfileReqMsg::mutable_avada_size() {
  set_has_avada_size();
  if (avada_size_ == &::google::protobuf::internal::kEmptyString) {
    avada_size_ = new ::std::string;
  }
  return avada_size_;
}
inline ::std::string* SetUserProfileReqMsg::release_avada_size() {
  clear_has_avada_size();
  if (avada_size_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = avada_size_;
    avada_size_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SetUserProfileReqMsg::set_allocated_avada_size(::std::string* avada_size) {
  if (avada_size_ != &::google::protobuf::internal::kEmptyString) {
    delete avada_size_;
  }
  if (avada_size) {
    set_has_avada_size();
    avada_size_ = avada_size;
  } else {
    clear_has_avada_size();
    avada_size_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// SetUserProfileRespMsg

// required .Cell.RetCode ret_code = 1;
inline bool SetUserProfileRespMsg::has_ret_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetUserProfileRespMsg::set_has_ret_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetUserProfileRespMsg::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetUserProfileRespMsg::clear_ret_code() {
  ret_code_ = 0;
  clear_has_ret_code();
}
inline ::Cell::RetCode SetUserProfileRespMsg::ret_code() const {
  return static_cast< ::Cell::RetCode >(ret_code_);
}
inline void SetUserProfileRespMsg::set_ret_code(::Cell::RetCode value) {
  assert(::Cell::RetCode_IsValid(value));
  set_has_ret_code();
  ret_code_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Cell

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_account_2eproto__INCLUDED
