// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ugc.proto

#ifndef PROTOBUF_ugc_2eproto__INCLUDED
#define PROTOBUF_ugc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "common_data.pb.h"
// @@protoc_insertion_point(includes)

namespace Cell {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ugc_2eproto();
void protobuf_AssignDesc_ugc_2eproto();
void protobuf_ShutdownFile_ugc_2eproto();

class UploadUGCReqMsg;
class UploadUGCRespMsg;
class PullUGCReqMsg;
class PullUGCRespMsg;
class GetUGCReqMsg;
class GetUGCRespMsg;
class PostUGCReqMsg;
class PostUGCRespMsg;
class GetUGCListReqMsg;
class GetUGCListRespMsg;
class AddCommentReqMsg;
class AddCommentRespMsg;
class GetCommentReqMsg;
class GetCommentRespMsg;
class GetCommentRespMsg_CommentDetail;
class AddCollectionReqMsg;
class AddCollectionRespMsg;
class PlayCardReqMsg;
class PlayCardRespMsg;

// ===================================================================

class UploadUGCReqMsg : public ::google::protobuf::Message {
 public:
  UploadUGCReqMsg();
  virtual ~UploadUGCReqMsg();

  UploadUGCReqMsg(const UploadUGCReqMsg& from);

  inline UploadUGCReqMsg& operator=(const UploadUGCReqMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UploadUGCReqMsg& default_instance();

  void Swap(UploadUGCReqMsg* other);

  // implements Message ----------------------------------------------

  UploadUGCReqMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UploadUGCReqMsg& from);
  void MergeFrom(const UploadUGCReqMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required string session_token = 2;
  inline bool has_session_token() const;
  inline void clear_session_token();
  static const int kSessionTokenFieldNumber = 2;
  inline const ::std::string& session_token() const;
  inline void set_session_token(const ::std::string& value);
  inline void set_session_token(const char* value);
  inline void set_session_token(const char* value, size_t size);
  inline ::std::string* mutable_session_token();
  inline ::std::string* release_session_token();
  inline void set_allocated_session_token(::std::string* session_token);

  // optional .Cell.UGC ugc = 3;
  inline bool has_ugc() const;
  inline void clear_ugc();
  static const int kUgcFieldNumber = 3;
  inline const ::Cell::UGC& ugc() const;
  inline ::Cell::UGC* mutable_ugc();
  inline ::Cell::UGC* release_ugc();
  inline void set_allocated_ugc(::Cell::UGC* ugc);

  // @@protoc_insertion_point(class_scope:Cell.UploadUGCReqMsg)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_session_token();
  inline void clear_has_session_token();
  inline void set_has_ugc();
  inline void clear_has_ugc();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* session_token_;
  ::Cell::UGC* ugc_;
  ::google::protobuf::uint32 uid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ugc_2eproto();
  friend void protobuf_AssignDesc_ugc_2eproto();
  friend void protobuf_ShutdownFile_ugc_2eproto();

  void InitAsDefaultInstance();
  static UploadUGCReqMsg* default_instance_;
};
// -------------------------------------------------------------------

class UploadUGCRespMsg : public ::google::protobuf::Message {
 public:
  UploadUGCRespMsg();
  virtual ~UploadUGCRespMsg();

  UploadUGCRespMsg(const UploadUGCRespMsg& from);

  inline UploadUGCRespMsg& operator=(const UploadUGCRespMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UploadUGCRespMsg& default_instance();

  void Swap(UploadUGCRespMsg* other);

  // implements Message ----------------------------------------------

  UploadUGCRespMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UploadUGCRespMsg& from);
  void MergeFrom(const UploadUGCRespMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Cell.RetCode ret_code = 1;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  inline ::Cell::RetCode ret_code() const;
  inline void set_ret_code(::Cell::RetCode value);

  // optional uint64 ugc_id = 2;
  inline bool has_ugc_id() const;
  inline void clear_ugc_id();
  static const int kUgcIdFieldNumber = 2;
  inline ::google::protobuf::uint64 ugc_id() const;
  inline void set_ugc_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cell.UploadUGCRespMsg)
 private:
  inline void set_has_ret_code();
  inline void clear_has_ret_code();
  inline void set_has_ugc_id();
  inline void clear_has_ugc_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 ugc_id_;
  int ret_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ugc_2eproto();
  friend void protobuf_AssignDesc_ugc_2eproto();
  friend void protobuf_ShutdownFile_ugc_2eproto();

  void InitAsDefaultInstance();
  static UploadUGCRespMsg* default_instance_;
};
// -------------------------------------------------------------------

class PullUGCReqMsg : public ::google::protobuf::Message {
 public:
  PullUGCReqMsg();
  virtual ~PullUGCReqMsg();

  PullUGCReqMsg(const PullUGCReqMsg& from);

  inline PullUGCReqMsg& operator=(const PullUGCReqMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PullUGCReqMsg& default_instance();

  void Swap(PullUGCReqMsg* other);

  // implements Message ----------------------------------------------

  PullUGCReqMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PullUGCReqMsg& from);
  void MergeFrom(const PullUGCReqMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required string session_token = 2;
  inline bool has_session_token() const;
  inline void clear_session_token();
  static const int kSessionTokenFieldNumber = 2;
  inline const ::std::string& session_token() const;
  inline void set_session_token(const ::std::string& value);
  inline void set_session_token(const char* value);
  inline void set_session_token(const char* value, size_t size);
  inline ::std::string* mutable_session_token();
  inline ::std::string* release_session_token();
  inline void set_allocated_session_token(::std::string* session_token);

  // optional .Cell.Geo geo = 3;
  inline bool has_geo() const;
  inline void clear_geo();
  static const int kGeoFieldNumber = 3;
  inline const ::Cell::Geo& geo() const;
  inline ::Cell::Geo* mutable_geo();
  inline ::Cell::Geo* release_geo();
  inline void set_allocated_geo(::Cell::Geo* geo);

  // optional uint32 need_num = 4;
  inline bool has_need_num() const;
  inline void clear_need_num();
  static const int kNeedNumFieldNumber = 4;
  inline ::google::protobuf::uint32 need_num() const;
  inline void set_need_num(::google::protobuf::uint32 value);

  // optional uint64 last_id = 5;
  inline bool has_last_id() const;
  inline void clear_last_id();
  static const int kLastIdFieldNumber = 5;
  inline ::google::protobuf::uint64 last_id() const;
  inline void set_last_id(::google::protobuf::uint64 value);

  // optional .Cell.PullType pull_type = 6 [default = PT_PULL];
  inline bool has_pull_type() const;
  inline void clear_pull_type();
  static const int kPullTypeFieldNumber = 6;
  inline ::Cell::PullType pull_type() const;
  inline void set_pull_type(::Cell::PullType value);

  // repeated uint32 forbid_uid = 7;
  inline int forbid_uid_size() const;
  inline void clear_forbid_uid();
  static const int kForbidUidFieldNumber = 7;
  inline ::google::protobuf::uint32 forbid_uid(int index) const;
  inline void set_forbid_uid(int index, ::google::protobuf::uint32 value);
  inline void add_forbid_uid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      forbid_uid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_forbid_uid();

  // @@protoc_insertion_point(class_scope:Cell.PullUGCReqMsg)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_session_token();
  inline void clear_has_session_token();
  inline void set_has_geo();
  inline void clear_has_geo();
  inline void set_has_need_num();
  inline void clear_has_need_num();
  inline void set_has_last_id();
  inline void clear_has_last_id();
  inline void set_has_pull_type();
  inline void clear_has_pull_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* session_token_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 need_num_;
  ::Cell::Geo* geo_;
  ::google::protobuf::uint64 last_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > forbid_uid_;
  int pull_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_ugc_2eproto();
  friend void protobuf_AssignDesc_ugc_2eproto();
  friend void protobuf_ShutdownFile_ugc_2eproto();

  void InitAsDefaultInstance();
  static PullUGCReqMsg* default_instance_;
};
// -------------------------------------------------------------------

class PullUGCRespMsg : public ::google::protobuf::Message {
 public:
  PullUGCRespMsg();
  virtual ~PullUGCRespMsg();

  PullUGCRespMsg(const PullUGCRespMsg& from);

  inline PullUGCRespMsg& operator=(const PullUGCRespMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PullUGCRespMsg& default_instance();

  void Swap(PullUGCRespMsg* other);

  // implements Message ----------------------------------------------

  PullUGCRespMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PullUGCRespMsg& from);
  void MergeFrom(const PullUGCRespMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Cell.RetCode ret_code = 1;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  inline ::Cell::RetCode ret_code() const;
  inline void set_ret_code(::Cell::RetCode value);

  // repeated .Cell.UGCIdList ugc_id_list = 2;
  inline int ugc_id_list_size() const;
  inline void clear_ugc_id_list();
  static const int kUgcIdListFieldNumber = 2;
  inline const ::Cell::UGCIdList& ugc_id_list(int index) const;
  inline ::Cell::UGCIdList* mutable_ugc_id_list(int index);
  inline ::Cell::UGCIdList* add_ugc_id_list();
  inline const ::google::protobuf::RepeatedPtrField< ::Cell::UGCIdList >&
      ugc_id_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cell::UGCIdList >*
      mutable_ugc_id_list();

  // @@protoc_insertion_point(class_scope:Cell.PullUGCRespMsg)
 private:
  inline void set_has_ret_code();
  inline void clear_has_ret_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Cell::UGCIdList > ugc_id_list_;
  int ret_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ugc_2eproto();
  friend void protobuf_AssignDesc_ugc_2eproto();
  friend void protobuf_ShutdownFile_ugc_2eproto();

  void InitAsDefaultInstance();
  static PullUGCRespMsg* default_instance_;
};
// -------------------------------------------------------------------

class GetUGCReqMsg : public ::google::protobuf::Message {
 public:
  GetUGCReqMsg();
  virtual ~GetUGCReqMsg();

  GetUGCReqMsg(const GetUGCReqMsg& from);

  inline GetUGCReqMsg& operator=(const GetUGCReqMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUGCReqMsg& default_instance();

  void Swap(GetUGCReqMsg* other);

  // implements Message ----------------------------------------------

  GetUGCReqMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetUGCReqMsg& from);
  void MergeFrom(const GetUGCReqMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required string session_token = 2;
  inline bool has_session_token() const;
  inline void clear_session_token();
  static const int kSessionTokenFieldNumber = 2;
  inline const ::std::string& session_token() const;
  inline void set_session_token(const ::std::string& value);
  inline void set_session_token(const char* value);
  inline void set_session_token(const char* value, size_t size);
  inline ::std::string* mutable_session_token();
  inline ::std::string* release_session_token();
  inline void set_allocated_session_token(::std::string* session_token);

  // repeated uint64 ugc_id = 3;
  inline int ugc_id_size() const;
  inline void clear_ugc_id();
  static const int kUgcIdFieldNumber = 3;
  inline ::google::protobuf::uint64 ugc_id(int index) const;
  inline void set_ugc_id(int index, ::google::protobuf::uint64 value);
  inline void add_ugc_id(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      ugc_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_ugc_id();

  // repeated uint32 org_uid = 4;
  inline int org_uid_size() const;
  inline void clear_org_uid();
  static const int kOrgUidFieldNumber = 4;
  inline ::google::protobuf::uint32 org_uid(int index) const;
  inline void set_org_uid(int index, ::google::protobuf::uint32 value);
  inline void add_org_uid(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      org_uid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_org_uid();

  // optional .Cell.Geo geo = 5;
  inline bool has_geo() const;
  inline void clear_geo();
  static const int kGeoFieldNumber = 5;
  inline const ::Cell::Geo& geo() const;
  inline ::Cell::Geo* mutable_geo();
  inline ::Cell::Geo* release_geo();
  inline void set_allocated_geo(::Cell::Geo* geo);

  // @@protoc_insertion_point(class_scope:Cell.GetUGCReqMsg)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_session_token();
  inline void clear_has_session_token();
  inline void set_has_geo();
  inline void clear_has_geo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* session_token_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > ugc_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > org_uid_;
  ::Cell::Geo* geo_;
  ::google::protobuf::uint32 uid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_ugc_2eproto();
  friend void protobuf_AssignDesc_ugc_2eproto();
  friend void protobuf_ShutdownFile_ugc_2eproto();

  void InitAsDefaultInstance();
  static GetUGCReqMsg* default_instance_;
};
// -------------------------------------------------------------------

class GetUGCRespMsg : public ::google::protobuf::Message {
 public:
  GetUGCRespMsg();
  virtual ~GetUGCRespMsg();

  GetUGCRespMsg(const GetUGCRespMsg& from);

  inline GetUGCRespMsg& operator=(const GetUGCRespMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUGCRespMsg& default_instance();

  void Swap(GetUGCRespMsg* other);

  // implements Message ----------------------------------------------

  GetUGCRespMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetUGCRespMsg& from);
  void MergeFrom(const GetUGCRespMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Cell.RetCode ret_code = 1;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  inline ::Cell::RetCode ret_code() const;
  inline void set_ret_code(::Cell::RetCode value);

  // repeated .Cell.UGC ugc = 2;
  inline int ugc_size() const;
  inline void clear_ugc();
  static const int kUgcFieldNumber = 2;
  inline const ::Cell::UGC& ugc(int index) const;
  inline ::Cell::UGC* mutable_ugc(int index);
  inline ::Cell::UGC* add_ugc();
  inline const ::google::protobuf::RepeatedPtrField< ::Cell::UGC >&
      ugc() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cell::UGC >*
      mutable_ugc();

  // repeated uint32 post_num = 3;
  inline int post_num_size() const;
  inline void clear_post_num();
  static const int kPostNumFieldNumber = 3;
  inline ::google::protobuf::uint32 post_num(int index) const;
  inline void set_post_num(int index, ::google::protobuf::uint32 value);
  inline void add_post_num(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      post_num() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_post_num();

  // repeated uint32 pass_num = 4;
  inline int pass_num_size() const;
  inline void clear_pass_num();
  static const int kPassNumFieldNumber = 4;
  inline ::google::protobuf::uint32 pass_num(int index) const;
  inline void set_pass_num(int index, ::google::protobuf::uint32 value);
  inline void add_pass_num(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      pass_num() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_pass_num();

  // repeated uint32 post_dist = 5;
  inline int post_dist_size() const;
  inline void clear_post_dist();
  static const int kPostDistFieldNumber = 5;
  inline ::google::protobuf::uint32 post_dist(int index) const;
  inline void set_post_dist(int index, ::google::protobuf::uint32 value);
  inline void add_post_dist(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      post_dist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_post_dist();

  // repeated string usr_name = 6;
  inline int usr_name_size() const;
  inline void clear_usr_name();
  static const int kUsrNameFieldNumber = 6;
  inline const ::std::string& usr_name(int index) const;
  inline ::std::string* mutable_usr_name(int index);
  inline void set_usr_name(int index, const ::std::string& value);
  inline void set_usr_name(int index, const char* value);
  inline void set_usr_name(int index, const char* value, size_t size);
  inline ::std::string* add_usr_name();
  inline void add_usr_name(const ::std::string& value);
  inline void add_usr_name(const char* value);
  inline void add_usr_name(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& usr_name() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_usr_name();

  // repeated string avada_url = 7;
  inline int avada_url_size() const;
  inline void clear_avada_url();
  static const int kAvadaUrlFieldNumber = 7;
  inline const ::std::string& avada_url(int index) const;
  inline ::std::string* mutable_avada_url(int index);
  inline void set_avada_url(int index, const ::std::string& value);
  inline void set_avada_url(int index, const char* value);
  inline void set_avada_url(int index, const char* value, size_t size);
  inline ::std::string* add_avada_url();
  inline void add_avada_url(const ::std::string& value);
  inline void add_avada_url(const char* value);
  inline void add_avada_url(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& avada_url() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_avada_url();

  // repeated uint32 dist = 8;
  inline int dist_size() const;
  inline void clear_dist();
  static const int kDistFieldNumber = 8;
  inline ::google::protobuf::uint32 dist(int index) const;
  inline void set_dist(int index, ::google::protobuf::uint32 value);
  inline void add_dist(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      dist() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_dist();

  // repeated .Cell.Gender gender = 9;
  inline int gender_size() const;
  inline void clear_gender();
  static const int kGenderFieldNumber = 9;
  inline ::Cell::Gender gender(int index) const;
  inline void set_gender(int index, ::Cell::Gender value);
  inline void add_gender(::Cell::Gender value);
  inline const ::google::protobuf::RepeatedField<int>& gender() const;
  inline ::google::protobuf::RepeatedField<int>* mutable_gender();

  // repeated uint32 alive = 10;
  inline int alive_size() const;
  inline void clear_alive();
  static const int kAliveFieldNumber = 10;
  inline ::google::protobuf::uint32 alive(int index) const;
  inline void set_alive(int index, ::google::protobuf::uint32 value);
  inline void add_alive(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      alive() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_alive();

  // repeated .Cell.CardType card_type = 11;
  inline int card_type_size() const;
  inline void clear_card_type();
  static const int kCardTypeFieldNumber = 11;
  inline ::Cell::CardType card_type(int index) const;
  inline void set_card_type(int index, ::Cell::CardType value);
  inline void add_card_type(::Cell::CardType value);
  inline const ::google::protobuf::RepeatedField<int>& card_type() const;
  inline ::google::protobuf::RepeatedField<int>* mutable_card_type();

  // @@protoc_insertion_point(class_scope:Cell.GetUGCRespMsg)
 private:
  inline void set_has_ret_code();
  inline void clear_has_ret_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Cell::UGC > ugc_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > post_num_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > pass_num_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > post_dist_;
  ::google::protobuf::RepeatedPtrField< ::std::string> usr_name_;
  ::google::protobuf::RepeatedPtrField< ::std::string> avada_url_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > dist_;
  ::google::protobuf::RepeatedField<int> gender_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > alive_;
  ::google::protobuf::RepeatedField<int> card_type_;
  int ret_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  friend void  protobuf_AddDesc_ugc_2eproto();
  friend void protobuf_AssignDesc_ugc_2eproto();
  friend void protobuf_ShutdownFile_ugc_2eproto();

  void InitAsDefaultInstance();
  static GetUGCRespMsg* default_instance_;
};
// -------------------------------------------------------------------

class PostUGCReqMsg : public ::google::protobuf::Message {
 public:
  PostUGCReqMsg();
  virtual ~PostUGCReqMsg();

  PostUGCReqMsg(const PostUGCReqMsg& from);

  inline PostUGCReqMsg& operator=(const PostUGCReqMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PostUGCReqMsg& default_instance();

  void Swap(PostUGCReqMsg* other);

  // implements Message ----------------------------------------------

  PostUGCReqMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PostUGCReqMsg& from);
  void MergeFrom(const PostUGCReqMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required string session_token = 2;
  inline bool has_session_token() const;
  inline void clear_session_token();
  static const int kSessionTokenFieldNumber = 2;
  inline const ::std::string& session_token() const;
  inline void set_session_token(const ::std::string& value);
  inline void set_session_token(const char* value);
  inline void set_session_token(const char* value, size_t size);
  inline ::std::string* mutable_session_token();
  inline ::std::string* release_session_token();
  inline void set_allocated_session_token(::std::string* session_token);

  // optional uint64 ugc_id = 3;
  inline bool has_ugc_id() const;
  inline void clear_ugc_id();
  static const int kUgcIdFieldNumber = 3;
  inline ::google::protobuf::uint64 ugc_id() const;
  inline void set_ugc_id(::google::protobuf::uint64 value);

  // optional uint64 msid = 4;
  inline bool has_msid() const;
  inline void clear_msid();
  static const int kMsidFieldNumber = 4;
  inline ::google::protobuf::uint64 msid() const;
  inline void set_msid(::google::protobuf::uint64 value);

  // optional uint32 org_uid = 5;
  inline bool has_org_uid() const;
  inline void clear_org_uid();
  static const int kOrgUidFieldNumber = 5;
  inline ::google::protobuf::uint32 org_uid() const;
  inline void set_org_uid(::google::protobuf::uint32 value);

  // optional .Cell.PostType post_type = 6;
  inline bool has_post_type() const;
  inline void clear_post_type();
  static const int kPostTypeFieldNumber = 6;
  inline ::Cell::PostType post_type() const;
  inline void set_post_type(::Cell::PostType value);

  // optional .Cell.Geo geo = 7;
  inline bool has_geo() const;
  inline void clear_geo();
  static const int kGeoFieldNumber = 7;
  inline const ::Cell::Geo& geo() const;
  inline ::Cell::Geo* mutable_geo();
  inline ::Cell::Geo* release_geo();
  inline void set_allocated_geo(::Cell::Geo* geo);

  // @@protoc_insertion_point(class_scope:Cell.PostUGCReqMsg)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_session_token();
  inline void clear_has_session_token();
  inline void set_has_ugc_id();
  inline void clear_has_ugc_id();
  inline void set_has_msid();
  inline void clear_has_msid();
  inline void set_has_org_uid();
  inline void clear_has_org_uid();
  inline void set_has_post_type();
  inline void clear_has_post_type();
  inline void set_has_geo();
  inline void clear_has_geo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* session_token_;
  ::google::protobuf::uint64 ugc_id_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 org_uid_;
  ::google::protobuf::uint64 msid_;
  ::Cell::Geo* geo_;
  int post_type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_ugc_2eproto();
  friend void protobuf_AssignDesc_ugc_2eproto();
  friend void protobuf_ShutdownFile_ugc_2eproto();

  void InitAsDefaultInstance();
  static PostUGCReqMsg* default_instance_;
};
// -------------------------------------------------------------------

class PostUGCRespMsg : public ::google::protobuf::Message {
 public:
  PostUGCRespMsg();
  virtual ~PostUGCRespMsg();

  PostUGCRespMsg(const PostUGCRespMsg& from);

  inline PostUGCRespMsg& operator=(const PostUGCRespMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PostUGCRespMsg& default_instance();

  void Swap(PostUGCRespMsg* other);

  // implements Message ----------------------------------------------

  PostUGCRespMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PostUGCRespMsg& from);
  void MergeFrom(const PostUGCRespMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Cell.RetCode ret_code = 1;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  inline ::Cell::RetCode ret_code() const;
  inline void set_ret_code(::Cell::RetCode value);

  // @@protoc_insertion_point(class_scope:Cell.PostUGCRespMsg)
 private:
  inline void set_has_ret_code();
  inline void clear_has_ret_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int ret_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ugc_2eproto();
  friend void protobuf_AssignDesc_ugc_2eproto();
  friend void protobuf_ShutdownFile_ugc_2eproto();

  void InitAsDefaultInstance();
  static PostUGCRespMsg* default_instance_;
};
// -------------------------------------------------------------------

class GetUGCListReqMsg : public ::google::protobuf::Message {
 public:
  GetUGCListReqMsg();
  virtual ~GetUGCListReqMsg();

  GetUGCListReqMsg(const GetUGCListReqMsg& from);

  inline GetUGCListReqMsg& operator=(const GetUGCListReqMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUGCListReqMsg& default_instance();

  void Swap(GetUGCListReqMsg* other);

  // implements Message ----------------------------------------------

  GetUGCListReqMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetUGCListReqMsg& from);
  void MergeFrom(const GetUGCListReqMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required string session_token = 2;
  inline bool has_session_token() const;
  inline void clear_session_token();
  static const int kSessionTokenFieldNumber = 2;
  inline const ::std::string& session_token() const;
  inline void set_session_token(const ::std::string& value);
  inline void set_session_token(const char* value);
  inline void set_session_token(const char* value, size_t size);
  inline ::std::string* mutable_session_token();
  inline ::std::string* release_session_token();
  inline void set_allocated_session_token(::std::string* session_token);

  // optional .Cell.UGCListType ugc_list_type = 3;
  inline bool has_ugc_list_type() const;
  inline void clear_ugc_list_type();
  static const int kUgcListTypeFieldNumber = 3;
  inline ::Cell::UGCListType ugc_list_type() const;
  inline void set_ugc_list_type(::Cell::UGCListType value);

  // optional uint32 need_ugc_num = 4;
  inline bool has_need_ugc_num() const;
  inline void clear_need_ugc_num();
  static const int kNeedUgcNumFieldNumber = 4;
  inline ::google::protobuf::uint32 need_ugc_num() const;
  inline void set_need_ugc_num(::google::protobuf::uint32 value);

  // optional uint32 last_id = 5;
  inline bool has_last_id() const;
  inline void clear_last_id();
  static const int kLastIdFieldNumber = 5;
  inline ::google::protobuf::uint32 last_id() const;
  inline void set_last_id(::google::protobuf::uint32 value);

  // optional uint32 org_uid = 6;
  inline bool has_org_uid() const;
  inline void clear_org_uid();
  static const int kOrgUidFieldNumber = 6;
  inline ::google::protobuf::uint32 org_uid() const;
  inline void set_org_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cell.GetUGCListReqMsg)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_session_token();
  inline void clear_has_session_token();
  inline void set_has_ugc_list_type();
  inline void clear_has_ugc_list_type();
  inline void set_has_need_ugc_num();
  inline void clear_has_need_ugc_num();
  inline void set_has_last_id();
  inline void clear_has_last_id();
  inline void set_has_org_uid();
  inline void clear_has_org_uid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* session_token_;
  ::google::protobuf::uint32 uid_;
  int ugc_list_type_;
  ::google::protobuf::uint32 need_ugc_num_;
  ::google::protobuf::uint32 last_id_;
  ::google::protobuf::uint32 org_uid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_ugc_2eproto();
  friend void protobuf_AssignDesc_ugc_2eproto();
  friend void protobuf_ShutdownFile_ugc_2eproto();

  void InitAsDefaultInstance();
  static GetUGCListReqMsg* default_instance_;
};
// -------------------------------------------------------------------

class GetUGCListRespMsg : public ::google::protobuf::Message {
 public:
  GetUGCListRespMsg();
  virtual ~GetUGCListRespMsg();

  GetUGCListRespMsg(const GetUGCListRespMsg& from);

  inline GetUGCListRespMsg& operator=(const GetUGCListRespMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetUGCListRespMsg& default_instance();

  void Swap(GetUGCListRespMsg* other);

  // implements Message ----------------------------------------------

  GetUGCListRespMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetUGCListRespMsg& from);
  void MergeFrom(const GetUGCListRespMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Cell.RetCode ret_code = 1;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  inline ::Cell::RetCode ret_code() const;
  inline void set_ret_code(::Cell::RetCode value);

  // repeated .Cell.UGCIdList ugc_id_list = 2;
  inline int ugc_id_list_size() const;
  inline void clear_ugc_id_list();
  static const int kUgcIdListFieldNumber = 2;
  inline const ::Cell::UGCIdList& ugc_id_list(int index) const;
  inline ::Cell::UGCIdList* mutable_ugc_id_list(int index);
  inline ::Cell::UGCIdList* add_ugc_id_list();
  inline const ::google::protobuf::RepeatedPtrField< ::Cell::UGCIdList >&
      ugc_id_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cell::UGCIdList >*
      mutable_ugc_id_list();

  // @@protoc_insertion_point(class_scope:Cell.GetUGCListRespMsg)
 private:
  inline void set_has_ret_code();
  inline void clear_has_ret_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Cell::UGCIdList > ugc_id_list_;
  int ret_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ugc_2eproto();
  friend void protobuf_AssignDesc_ugc_2eproto();
  friend void protobuf_ShutdownFile_ugc_2eproto();

  void InitAsDefaultInstance();
  static GetUGCListRespMsg* default_instance_;
};
// -------------------------------------------------------------------

class AddCommentReqMsg : public ::google::protobuf::Message {
 public:
  AddCommentReqMsg();
  virtual ~AddCommentReqMsg();

  AddCommentReqMsg(const AddCommentReqMsg& from);

  inline AddCommentReqMsg& operator=(const AddCommentReqMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddCommentReqMsg& default_instance();

  void Swap(AddCommentReqMsg* other);

  // implements Message ----------------------------------------------

  AddCommentReqMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddCommentReqMsg& from);
  void MergeFrom(const AddCommentReqMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required string session_token = 2;
  inline bool has_session_token() const;
  inline void clear_session_token();
  static const int kSessionTokenFieldNumber = 2;
  inline const ::std::string& session_token() const;
  inline void set_session_token(const ::std::string& value);
  inline void set_session_token(const char* value);
  inline void set_session_token(const char* value, size_t size);
  inline ::std::string* mutable_session_token();
  inline ::std::string* release_session_token();
  inline void set_allocated_session_token(::std::string* session_token);

  // optional uint64 ugc_id = 3;
  inline bool has_ugc_id() const;
  inline void clear_ugc_id();
  static const int kUgcIdFieldNumber = 3;
  inline ::google::protobuf::uint64 ugc_id() const;
  inline void set_ugc_id(::google::protobuf::uint64 value);

  // optional uint64 msid = 4;
  inline bool has_msid() const;
  inline void clear_msid();
  static const int kMsidFieldNumber = 4;
  inline ::google::protobuf::uint64 msid() const;
  inline void set_msid(::google::protobuf::uint64 value);

  // optional uint32 org_uid = 5;
  inline bool has_org_uid() const;
  inline void clear_org_uid();
  static const int kOrgUidFieldNumber = 5;
  inline ::google::protobuf::uint32 org_uid() const;
  inline void set_org_uid(::google::protobuf::uint32 value);

  // optional string comment = 6;
  inline bool has_comment() const;
  inline void clear_comment();
  static const int kCommentFieldNumber = 6;
  inline const ::std::string& comment() const;
  inline void set_comment(const ::std::string& value);
  inline void set_comment(const char* value);
  inline void set_comment(const char* value, size_t size);
  inline ::std::string* mutable_comment();
  inline ::std::string* release_comment();
  inline void set_allocated_comment(::std::string* comment);

  // @@protoc_insertion_point(class_scope:Cell.AddCommentReqMsg)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_session_token();
  inline void clear_has_session_token();
  inline void set_has_ugc_id();
  inline void clear_has_ugc_id();
  inline void set_has_msid();
  inline void clear_has_msid();
  inline void set_has_org_uid();
  inline void clear_has_org_uid();
  inline void set_has_comment();
  inline void clear_has_comment();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* session_token_;
  ::google::protobuf::uint64 ugc_id_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 org_uid_;
  ::google::protobuf::uint64 msid_;
  ::std::string* comment_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_ugc_2eproto();
  friend void protobuf_AssignDesc_ugc_2eproto();
  friend void protobuf_ShutdownFile_ugc_2eproto();

  void InitAsDefaultInstance();
  static AddCommentReqMsg* default_instance_;
};
// -------------------------------------------------------------------

class AddCommentRespMsg : public ::google::protobuf::Message {
 public:
  AddCommentRespMsg();
  virtual ~AddCommentRespMsg();

  AddCommentRespMsg(const AddCommentRespMsg& from);

  inline AddCommentRespMsg& operator=(const AddCommentRespMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddCommentRespMsg& default_instance();

  void Swap(AddCommentRespMsg* other);

  // implements Message ----------------------------------------------

  AddCommentRespMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddCommentRespMsg& from);
  void MergeFrom(const AddCommentRespMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Cell.RetCode ret_code = 1;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  inline ::Cell::RetCode ret_code() const;
  inline void set_ret_code(::Cell::RetCode value);

  // optional uint64 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint64 mcid() const;
  inline void set_mcid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cell.AddCommentRespMsg)
 private:
  inline void set_has_ret_code();
  inline void clear_has_ret_code();
  inline void set_has_mcid();
  inline void clear_has_mcid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 mcid_;
  int ret_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ugc_2eproto();
  friend void protobuf_AssignDesc_ugc_2eproto();
  friend void protobuf_ShutdownFile_ugc_2eproto();

  void InitAsDefaultInstance();
  static AddCommentRespMsg* default_instance_;
};
// -------------------------------------------------------------------

class GetCommentReqMsg : public ::google::protobuf::Message {
 public:
  GetCommentReqMsg();
  virtual ~GetCommentReqMsg();

  GetCommentReqMsg(const GetCommentReqMsg& from);

  inline GetCommentReqMsg& operator=(const GetCommentReqMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetCommentReqMsg& default_instance();

  void Swap(GetCommentReqMsg* other);

  // implements Message ----------------------------------------------

  GetCommentReqMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetCommentReqMsg& from);
  void MergeFrom(const GetCommentReqMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required string session_token = 2;
  inline bool has_session_token() const;
  inline void clear_session_token();
  static const int kSessionTokenFieldNumber = 2;
  inline const ::std::string& session_token() const;
  inline void set_session_token(const ::std::string& value);
  inline void set_session_token(const char* value);
  inline void set_session_token(const char* value, size_t size);
  inline ::std::string* mutable_session_token();
  inline ::std::string* release_session_token();
  inline void set_allocated_session_token(::std::string* session_token);

  // required .Cell.CommentType comment_type = 3;
  inline bool has_comment_type() const;
  inline void clear_comment_type();
  static const int kCommentTypeFieldNumber = 3;
  inline ::Cell::CommentType comment_type() const;
  inline void set_comment_type(::Cell::CommentType value);

  // required uint64 cid = 4;
  inline bool has_cid() const;
  inline void clear_cid();
  static const int kCidFieldNumber = 4;
  inline ::google::protobuf::uint64 cid() const;
  inline void set_cid(::google::protobuf::uint64 value);

  // optional uint64 last_id = 5;
  inline bool has_last_id() const;
  inline void clear_last_id();
  static const int kLastIdFieldNumber = 5;
  inline ::google::protobuf::uint64 last_id() const;
  inline void set_last_id(::google::protobuf::uint64 value);

  // optional uint32 need_num = 6;
  inline bool has_need_num() const;
  inline void clear_need_num();
  static const int kNeedNumFieldNumber = 6;
  inline ::google::protobuf::uint32 need_num() const;
  inline void set_need_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Cell.GetCommentReqMsg)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_session_token();
  inline void clear_has_session_token();
  inline void set_has_comment_type();
  inline void clear_has_comment_type();
  inline void set_has_cid();
  inline void clear_has_cid();
  inline void set_has_last_id();
  inline void clear_has_last_id();
  inline void set_has_need_num();
  inline void clear_has_need_num();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* session_token_;
  ::google::protobuf::uint32 uid_;
  int comment_type_;
  ::google::protobuf::uint64 cid_;
  ::google::protobuf::uint64 last_id_;
  ::google::protobuf::uint32 need_num_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_ugc_2eproto();
  friend void protobuf_AssignDesc_ugc_2eproto();
  friend void protobuf_ShutdownFile_ugc_2eproto();

  void InitAsDefaultInstance();
  static GetCommentReqMsg* default_instance_;
};
// -------------------------------------------------------------------

class GetCommentRespMsg_CommentDetail : public ::google::protobuf::Message {
 public:
  GetCommentRespMsg_CommentDetail();
  virtual ~GetCommentRespMsg_CommentDetail();

  GetCommentRespMsg_CommentDetail(const GetCommentRespMsg_CommentDetail& from);

  inline GetCommentRespMsg_CommentDetail& operator=(const GetCommentRespMsg_CommentDetail& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetCommentRespMsg_CommentDetail& default_instance();

  void Swap(GetCommentRespMsg_CommentDetail* other);

  // implements Message ----------------------------------------------

  GetCommentRespMsg_CommentDetail* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetCommentRespMsg_CommentDetail& from);
  void MergeFrom(const GetCommentRespMsg_CommentDetail& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 mcid = 1;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 1;
  inline ::google::protobuf::uint64 mcid() const;
  inline void set_mcid(::google::protobuf::uint64 value);

  // optional uint32 uid = 2;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 2;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // optional string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string avada_url = 4;
  inline bool has_avada_url() const;
  inline void clear_avada_url();
  static const int kAvadaUrlFieldNumber = 4;
  inline const ::std::string& avada_url() const;
  inline void set_avada_url(const ::std::string& value);
  inline void set_avada_url(const char* value);
  inline void set_avada_url(const char* value, size_t size);
  inline ::std::string* mutable_avada_url();
  inline ::std::string* release_avada_url();
  inline void set_allocated_avada_url(::std::string* avada_url);

  // optional string comment = 5;
  inline bool has_comment() const;
  inline void clear_comment();
  static const int kCommentFieldNumber = 5;
  inline const ::std::string& comment() const;
  inline void set_comment(const ::std::string& value);
  inline void set_comment(const char* value);
  inline void set_comment(const char* value, size_t size);
  inline ::std::string* mutable_comment();
  inline ::std::string* release_comment();
  inline void set_allocated_comment(::std::string* comment);

  // optional string create_time = 6;
  inline bool has_create_time() const;
  inline void clear_create_time();
  static const int kCreateTimeFieldNumber = 6;
  inline const ::std::string& create_time() const;
  inline void set_create_time(const ::std::string& value);
  inline void set_create_time(const char* value);
  inline void set_create_time(const char* value, size_t size);
  inline ::std::string* mutable_create_time();
  inline ::std::string* release_create_time();
  inline void set_allocated_create_time(::std::string* create_time);

  // @@protoc_insertion_point(class_scope:Cell.GetCommentRespMsg.CommentDetail)
 private:
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_avada_url();
  inline void clear_has_avada_url();
  inline void set_has_comment();
  inline void clear_has_comment();
  inline void set_has_create_time();
  inline void clear_has_create_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 mcid_;
  ::std::string* name_;
  ::std::string* avada_url_;
  ::std::string* comment_;
  ::std::string* create_time_;
  ::google::protobuf::uint32 uid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_ugc_2eproto();
  friend void protobuf_AssignDesc_ugc_2eproto();
  friend void protobuf_ShutdownFile_ugc_2eproto();

  void InitAsDefaultInstance();
  static GetCommentRespMsg_CommentDetail* default_instance_;
};
// -------------------------------------------------------------------

class GetCommentRespMsg : public ::google::protobuf::Message {
 public:
  GetCommentRespMsg();
  virtual ~GetCommentRespMsg();

  GetCommentRespMsg(const GetCommentRespMsg& from);

  inline GetCommentRespMsg& operator=(const GetCommentRespMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetCommentRespMsg& default_instance();

  void Swap(GetCommentRespMsg* other);

  // implements Message ----------------------------------------------

  GetCommentRespMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetCommentRespMsg& from);
  void MergeFrom(const GetCommentRespMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef GetCommentRespMsg_CommentDetail CommentDetail;

  // accessors -------------------------------------------------------

  // required .Cell.RetCode ret_code = 1;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  inline ::Cell::RetCode ret_code() const;
  inline void set_ret_code(::Cell::RetCode value);

  // repeated .Cell.GetCommentRespMsg.CommentDetail comments = 2;
  inline int comments_size() const;
  inline void clear_comments();
  static const int kCommentsFieldNumber = 2;
  inline const ::Cell::GetCommentRespMsg_CommentDetail& comments(int index) const;
  inline ::Cell::GetCommentRespMsg_CommentDetail* mutable_comments(int index);
  inline ::Cell::GetCommentRespMsg_CommentDetail* add_comments();
  inline const ::google::protobuf::RepeatedPtrField< ::Cell::GetCommentRespMsg_CommentDetail >&
      comments() const;
  inline ::google::protobuf::RepeatedPtrField< ::Cell::GetCommentRespMsg_CommentDetail >*
      mutable_comments();

  // @@protoc_insertion_point(class_scope:Cell.GetCommentRespMsg)
 private:
  inline void set_has_ret_code();
  inline void clear_has_ret_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Cell::GetCommentRespMsg_CommentDetail > comments_;
  int ret_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ugc_2eproto();
  friend void protobuf_AssignDesc_ugc_2eproto();
  friend void protobuf_ShutdownFile_ugc_2eproto();

  void InitAsDefaultInstance();
  static GetCommentRespMsg* default_instance_;
};
// -------------------------------------------------------------------

class AddCollectionReqMsg : public ::google::protobuf::Message {
 public:
  AddCollectionReqMsg();
  virtual ~AddCollectionReqMsg();

  AddCollectionReqMsg(const AddCollectionReqMsg& from);

  inline AddCollectionReqMsg& operator=(const AddCollectionReqMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddCollectionReqMsg& default_instance();

  void Swap(AddCollectionReqMsg* other);

  // implements Message ----------------------------------------------

  AddCollectionReqMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddCollectionReqMsg& from);
  void MergeFrom(const AddCollectionReqMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required string session_token = 2;
  inline bool has_session_token() const;
  inline void clear_session_token();
  static const int kSessionTokenFieldNumber = 2;
  inline const ::std::string& session_token() const;
  inline void set_session_token(const ::std::string& value);
  inline void set_session_token(const char* value);
  inline void set_session_token(const char* value, size_t size);
  inline ::std::string* mutable_session_token();
  inline ::std::string* release_session_token();
  inline void set_allocated_session_token(::std::string* session_token);

  // required .Cell.ConfirmType confirmType = 3;
  inline bool has_confirmtype() const;
  inline void clear_confirmtype();
  static const int kConfirmTypeFieldNumber = 3;
  inline ::Cell::ConfirmType confirmtype() const;
  inline void set_confirmtype(::Cell::ConfirmType value);

  // required .Cell.UGCIdList ugc_id_list = 4;
  inline bool has_ugc_id_list() const;
  inline void clear_ugc_id_list();
  static const int kUgcIdListFieldNumber = 4;
  inline const ::Cell::UGCIdList& ugc_id_list() const;
  inline ::Cell::UGCIdList* mutable_ugc_id_list();
  inline ::Cell::UGCIdList* release_ugc_id_list();
  inline void set_allocated_ugc_id_list(::Cell::UGCIdList* ugc_id_list);

  // @@protoc_insertion_point(class_scope:Cell.AddCollectionReqMsg)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_session_token();
  inline void clear_has_session_token();
  inline void set_has_confirmtype();
  inline void clear_has_confirmtype();
  inline void set_has_ugc_id_list();
  inline void clear_has_ugc_id_list();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* session_token_;
  ::google::protobuf::uint32 uid_;
  int confirmtype_;
  ::Cell::UGCIdList* ugc_id_list_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_ugc_2eproto();
  friend void protobuf_AssignDesc_ugc_2eproto();
  friend void protobuf_ShutdownFile_ugc_2eproto();

  void InitAsDefaultInstance();
  static AddCollectionReqMsg* default_instance_;
};
// -------------------------------------------------------------------

class AddCollectionRespMsg : public ::google::protobuf::Message {
 public:
  AddCollectionRespMsg();
  virtual ~AddCollectionRespMsg();

  AddCollectionRespMsg(const AddCollectionRespMsg& from);

  inline AddCollectionRespMsg& operator=(const AddCollectionRespMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddCollectionRespMsg& default_instance();

  void Swap(AddCollectionRespMsg* other);

  // implements Message ----------------------------------------------

  AddCollectionRespMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AddCollectionRespMsg& from);
  void MergeFrom(const AddCollectionRespMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Cell.RetCode ret_code = 1;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  inline ::Cell::RetCode ret_code() const;
  inline void set_ret_code(::Cell::RetCode value);

  // optional uint64 clt_id = 2;
  inline bool has_clt_id() const;
  inline void clear_clt_id();
  static const int kCltIdFieldNumber = 2;
  inline ::google::protobuf::uint64 clt_id() const;
  inline void set_clt_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Cell.AddCollectionRespMsg)
 private:
  inline void set_has_ret_code();
  inline void clear_has_ret_code();
  inline void set_has_clt_id();
  inline void clear_has_clt_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 clt_id_;
  int ret_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ugc_2eproto();
  friend void protobuf_AssignDesc_ugc_2eproto();
  friend void protobuf_ShutdownFile_ugc_2eproto();

  void InitAsDefaultInstance();
  static AddCollectionRespMsg* default_instance_;
};
// -------------------------------------------------------------------

class PlayCardReqMsg : public ::google::protobuf::Message {
 public:
  PlayCardReqMsg();
  virtual ~PlayCardReqMsg();

  PlayCardReqMsg(const PlayCardReqMsg& from);

  inline PlayCardReqMsg& operator=(const PlayCardReqMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayCardReqMsg& default_instance();

  void Swap(PlayCardReqMsg* other);

  // implements Message ----------------------------------------------

  PlayCardReqMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayCardReqMsg& from);
  void MergeFrom(const PlayCardReqMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint32 uid() const;
  inline void set_uid(::google::protobuf::uint32 value);

  // required string session_token = 2;
  inline bool has_session_token() const;
  inline void clear_session_token();
  static const int kSessionTokenFieldNumber = 2;
  inline const ::std::string& session_token() const;
  inline void set_session_token(const ::std::string& value);
  inline void set_session_token(const char* value);
  inline void set_session_token(const char* value, size_t size);
  inline ::std::string* mutable_session_token();
  inline ::std::string* release_session_token();
  inline void set_allocated_session_token(::std::string* session_token);

  // optional .Cell.Geo geo = 3;
  inline bool has_geo() const;
  inline void clear_geo();
  static const int kGeoFieldNumber = 3;
  inline const ::Cell::Geo& geo() const;
  inline ::Cell::Geo* mutable_geo();
  inline ::Cell::Geo* release_geo();
  inline void set_allocated_geo(::Cell::Geo* geo);

  // optional int32 coin = 4;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 4;
  inline ::google::protobuf::int32 coin() const;
  inline void set_coin(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Cell.PlayCardReqMsg)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_session_token();
  inline void clear_has_session_token();
  inline void set_has_geo();
  inline void clear_has_geo();
  inline void set_has_coin();
  inline void clear_has_coin();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* session_token_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::int32 coin_;
  ::Cell::Geo* geo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_ugc_2eproto();
  friend void protobuf_AssignDesc_ugc_2eproto();
  friend void protobuf_ShutdownFile_ugc_2eproto();

  void InitAsDefaultInstance();
  static PlayCardReqMsg* default_instance_;
};
// -------------------------------------------------------------------

class PlayCardRespMsg : public ::google::protobuf::Message {
 public:
  PlayCardRespMsg();
  virtual ~PlayCardRespMsg();

  PlayCardRespMsg(const PlayCardRespMsg& from);

  inline PlayCardRespMsg& operator=(const PlayCardRespMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayCardRespMsg& default_instance();

  void Swap(PlayCardRespMsg* other);

  // implements Message ----------------------------------------------

  PlayCardRespMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayCardRespMsg& from);
  void MergeFrom(const PlayCardRespMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Cell.RetCode ret_code = 1;
  inline bool has_ret_code() const;
  inline void clear_ret_code();
  static const int kRetCodeFieldNumber = 1;
  inline ::Cell::RetCode ret_code() const;
  inline void set_ret_code(::Cell::RetCode value);

  // @@protoc_insertion_point(class_scope:Cell.PlayCardRespMsg)
 private:
  inline void set_has_ret_code();
  inline void clear_has_ret_code();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int ret_code_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ugc_2eproto();
  friend void protobuf_AssignDesc_ugc_2eproto();
  friend void protobuf_ShutdownFile_ugc_2eproto();

  void InitAsDefaultInstance();
  static PlayCardRespMsg* default_instance_;
};
// ===================================================================


// ===================================================================

// UploadUGCReqMsg

// required uint32 uid = 1;
inline bool UploadUGCReqMsg::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UploadUGCReqMsg::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UploadUGCReqMsg::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UploadUGCReqMsg::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 UploadUGCReqMsg::uid() const {
  return uid_;
}
inline void UploadUGCReqMsg::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// required string session_token = 2;
inline bool UploadUGCReqMsg::has_session_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UploadUGCReqMsg::set_has_session_token() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UploadUGCReqMsg::clear_has_session_token() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UploadUGCReqMsg::clear_session_token() {
  if (session_token_ != &::google::protobuf::internal::kEmptyString) {
    session_token_->clear();
  }
  clear_has_session_token();
}
inline const ::std::string& UploadUGCReqMsg::session_token() const {
  return *session_token_;
}
inline void UploadUGCReqMsg::set_session_token(const ::std::string& value) {
  set_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    session_token_ = new ::std::string;
  }
  session_token_->assign(value);
}
inline void UploadUGCReqMsg::set_session_token(const char* value) {
  set_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    session_token_ = new ::std::string;
  }
  session_token_->assign(value);
}
inline void UploadUGCReqMsg::set_session_token(const char* value, size_t size) {
  set_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    session_token_ = new ::std::string;
  }
  session_token_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* UploadUGCReqMsg::mutable_session_token() {
  set_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    session_token_ = new ::std::string;
  }
  return session_token_;
}
inline ::std::string* UploadUGCReqMsg::release_session_token() {
  clear_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = session_token_;
    session_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void UploadUGCReqMsg::set_allocated_session_token(::std::string* session_token) {
  if (session_token_ != &::google::protobuf::internal::kEmptyString) {
    delete session_token_;
  }
  if (session_token) {
    set_has_session_token();
    session_token_ = session_token;
  } else {
    clear_has_session_token();
    session_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .Cell.UGC ugc = 3;
inline bool UploadUGCReqMsg::has_ugc() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UploadUGCReqMsg::set_has_ugc() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UploadUGCReqMsg::clear_has_ugc() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UploadUGCReqMsg::clear_ugc() {
  if (ugc_ != NULL) ugc_->::Cell::UGC::Clear();
  clear_has_ugc();
}
inline const ::Cell::UGC& UploadUGCReqMsg::ugc() const {
  return ugc_ != NULL ? *ugc_ : *default_instance_->ugc_;
}
inline ::Cell::UGC* UploadUGCReqMsg::mutable_ugc() {
  set_has_ugc();
  if (ugc_ == NULL) ugc_ = new ::Cell::UGC;
  return ugc_;
}
inline ::Cell::UGC* UploadUGCReqMsg::release_ugc() {
  clear_has_ugc();
  ::Cell::UGC* temp = ugc_;
  ugc_ = NULL;
  return temp;
}
inline void UploadUGCReqMsg::set_allocated_ugc(::Cell::UGC* ugc) {
  delete ugc_;
  ugc_ = ugc;
  if (ugc) {
    set_has_ugc();
  } else {
    clear_has_ugc();
  }
}

// -------------------------------------------------------------------

// UploadUGCRespMsg

// required .Cell.RetCode ret_code = 1;
inline bool UploadUGCRespMsg::has_ret_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UploadUGCRespMsg::set_has_ret_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UploadUGCRespMsg::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UploadUGCRespMsg::clear_ret_code() {
  ret_code_ = 0;
  clear_has_ret_code();
}
inline ::Cell::RetCode UploadUGCRespMsg::ret_code() const {
  return static_cast< ::Cell::RetCode >(ret_code_);
}
inline void UploadUGCRespMsg::set_ret_code(::Cell::RetCode value) {
  assert(::Cell::RetCode_IsValid(value));
  set_has_ret_code();
  ret_code_ = value;
}

// optional uint64 ugc_id = 2;
inline bool UploadUGCRespMsg::has_ugc_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UploadUGCRespMsg::set_has_ugc_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UploadUGCRespMsg::clear_has_ugc_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UploadUGCRespMsg::clear_ugc_id() {
  ugc_id_ = GOOGLE_ULONGLONG(0);
  clear_has_ugc_id();
}
inline ::google::protobuf::uint64 UploadUGCRespMsg::ugc_id() const {
  return ugc_id_;
}
inline void UploadUGCRespMsg::set_ugc_id(::google::protobuf::uint64 value) {
  set_has_ugc_id();
  ugc_id_ = value;
}

// -------------------------------------------------------------------

// PullUGCReqMsg

// required uint32 uid = 1;
inline bool PullUGCReqMsg::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PullUGCReqMsg::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PullUGCReqMsg::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PullUGCReqMsg::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 PullUGCReqMsg::uid() const {
  return uid_;
}
inline void PullUGCReqMsg::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// required string session_token = 2;
inline bool PullUGCReqMsg::has_session_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PullUGCReqMsg::set_has_session_token() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PullUGCReqMsg::clear_has_session_token() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PullUGCReqMsg::clear_session_token() {
  if (session_token_ != &::google::protobuf::internal::kEmptyString) {
    session_token_->clear();
  }
  clear_has_session_token();
}
inline const ::std::string& PullUGCReqMsg::session_token() const {
  return *session_token_;
}
inline void PullUGCReqMsg::set_session_token(const ::std::string& value) {
  set_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    session_token_ = new ::std::string;
  }
  session_token_->assign(value);
}
inline void PullUGCReqMsg::set_session_token(const char* value) {
  set_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    session_token_ = new ::std::string;
  }
  session_token_->assign(value);
}
inline void PullUGCReqMsg::set_session_token(const char* value, size_t size) {
  set_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    session_token_ = new ::std::string;
  }
  session_token_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PullUGCReqMsg::mutable_session_token() {
  set_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    session_token_ = new ::std::string;
  }
  return session_token_;
}
inline ::std::string* PullUGCReqMsg::release_session_token() {
  clear_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = session_token_;
    session_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PullUGCReqMsg::set_allocated_session_token(::std::string* session_token) {
  if (session_token_ != &::google::protobuf::internal::kEmptyString) {
    delete session_token_;
  }
  if (session_token) {
    set_has_session_token();
    session_token_ = session_token;
  } else {
    clear_has_session_token();
    session_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .Cell.Geo geo = 3;
inline bool PullUGCReqMsg::has_geo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PullUGCReqMsg::set_has_geo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PullUGCReqMsg::clear_has_geo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PullUGCReqMsg::clear_geo() {
  if (geo_ != NULL) geo_->::Cell::Geo::Clear();
  clear_has_geo();
}
inline const ::Cell::Geo& PullUGCReqMsg::geo() const {
  return geo_ != NULL ? *geo_ : *default_instance_->geo_;
}
inline ::Cell::Geo* PullUGCReqMsg::mutable_geo() {
  set_has_geo();
  if (geo_ == NULL) geo_ = new ::Cell::Geo;
  return geo_;
}
inline ::Cell::Geo* PullUGCReqMsg::release_geo() {
  clear_has_geo();
  ::Cell::Geo* temp = geo_;
  geo_ = NULL;
  return temp;
}
inline void PullUGCReqMsg::set_allocated_geo(::Cell::Geo* geo) {
  delete geo_;
  geo_ = geo;
  if (geo) {
    set_has_geo();
  } else {
    clear_has_geo();
  }
}

// optional uint32 need_num = 4;
inline bool PullUGCReqMsg::has_need_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PullUGCReqMsg::set_has_need_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PullUGCReqMsg::clear_has_need_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PullUGCReqMsg::clear_need_num() {
  need_num_ = 0u;
  clear_has_need_num();
}
inline ::google::protobuf::uint32 PullUGCReqMsg::need_num() const {
  return need_num_;
}
inline void PullUGCReqMsg::set_need_num(::google::protobuf::uint32 value) {
  set_has_need_num();
  need_num_ = value;
}

// optional uint64 last_id = 5;
inline bool PullUGCReqMsg::has_last_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PullUGCReqMsg::set_has_last_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PullUGCReqMsg::clear_has_last_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PullUGCReqMsg::clear_last_id() {
  last_id_ = GOOGLE_ULONGLONG(0);
  clear_has_last_id();
}
inline ::google::protobuf::uint64 PullUGCReqMsg::last_id() const {
  return last_id_;
}
inline void PullUGCReqMsg::set_last_id(::google::protobuf::uint64 value) {
  set_has_last_id();
  last_id_ = value;
}

// optional .Cell.PullType pull_type = 6 [default = PT_PULL];
inline bool PullUGCReqMsg::has_pull_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PullUGCReqMsg::set_has_pull_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PullUGCReqMsg::clear_has_pull_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PullUGCReqMsg::clear_pull_type() {
  pull_type_ = 0;
  clear_has_pull_type();
}
inline ::Cell::PullType PullUGCReqMsg::pull_type() const {
  return static_cast< ::Cell::PullType >(pull_type_);
}
inline void PullUGCReqMsg::set_pull_type(::Cell::PullType value) {
  assert(::Cell::PullType_IsValid(value));
  set_has_pull_type();
  pull_type_ = value;
}

// repeated uint32 forbid_uid = 7;
inline int PullUGCReqMsg::forbid_uid_size() const {
  return forbid_uid_.size();
}
inline void PullUGCReqMsg::clear_forbid_uid() {
  forbid_uid_.Clear();
}
inline ::google::protobuf::uint32 PullUGCReqMsg::forbid_uid(int index) const {
  return forbid_uid_.Get(index);
}
inline void PullUGCReqMsg::set_forbid_uid(int index, ::google::protobuf::uint32 value) {
  forbid_uid_.Set(index, value);
}
inline void PullUGCReqMsg::add_forbid_uid(::google::protobuf::uint32 value) {
  forbid_uid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
PullUGCReqMsg::forbid_uid() const {
  return forbid_uid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
PullUGCReqMsg::mutable_forbid_uid() {
  return &forbid_uid_;
}

// -------------------------------------------------------------------

// PullUGCRespMsg

// required .Cell.RetCode ret_code = 1;
inline bool PullUGCRespMsg::has_ret_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PullUGCRespMsg::set_has_ret_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PullUGCRespMsg::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PullUGCRespMsg::clear_ret_code() {
  ret_code_ = 0;
  clear_has_ret_code();
}
inline ::Cell::RetCode PullUGCRespMsg::ret_code() const {
  return static_cast< ::Cell::RetCode >(ret_code_);
}
inline void PullUGCRespMsg::set_ret_code(::Cell::RetCode value) {
  assert(::Cell::RetCode_IsValid(value));
  set_has_ret_code();
  ret_code_ = value;
}

// repeated .Cell.UGCIdList ugc_id_list = 2;
inline int PullUGCRespMsg::ugc_id_list_size() const {
  return ugc_id_list_.size();
}
inline void PullUGCRespMsg::clear_ugc_id_list() {
  ugc_id_list_.Clear();
}
inline const ::Cell::UGCIdList& PullUGCRespMsg::ugc_id_list(int index) const {
  return ugc_id_list_.Get(index);
}
inline ::Cell::UGCIdList* PullUGCRespMsg::mutable_ugc_id_list(int index) {
  return ugc_id_list_.Mutable(index);
}
inline ::Cell::UGCIdList* PullUGCRespMsg::add_ugc_id_list() {
  return ugc_id_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cell::UGCIdList >&
PullUGCRespMsg::ugc_id_list() const {
  return ugc_id_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cell::UGCIdList >*
PullUGCRespMsg::mutable_ugc_id_list() {
  return &ugc_id_list_;
}

// -------------------------------------------------------------------

// GetUGCReqMsg

// required uint32 uid = 1;
inline bool GetUGCReqMsg::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetUGCReqMsg::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetUGCReqMsg::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetUGCReqMsg::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 GetUGCReqMsg::uid() const {
  return uid_;
}
inline void GetUGCReqMsg::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// required string session_token = 2;
inline bool GetUGCReqMsg::has_session_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetUGCReqMsg::set_has_session_token() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetUGCReqMsg::clear_has_session_token() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetUGCReqMsg::clear_session_token() {
  if (session_token_ != &::google::protobuf::internal::kEmptyString) {
    session_token_->clear();
  }
  clear_has_session_token();
}
inline const ::std::string& GetUGCReqMsg::session_token() const {
  return *session_token_;
}
inline void GetUGCReqMsg::set_session_token(const ::std::string& value) {
  set_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    session_token_ = new ::std::string;
  }
  session_token_->assign(value);
}
inline void GetUGCReqMsg::set_session_token(const char* value) {
  set_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    session_token_ = new ::std::string;
  }
  session_token_->assign(value);
}
inline void GetUGCReqMsg::set_session_token(const char* value, size_t size) {
  set_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    session_token_ = new ::std::string;
  }
  session_token_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetUGCReqMsg::mutable_session_token() {
  set_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    session_token_ = new ::std::string;
  }
  return session_token_;
}
inline ::std::string* GetUGCReqMsg::release_session_token() {
  clear_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = session_token_;
    session_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GetUGCReqMsg::set_allocated_session_token(::std::string* session_token) {
  if (session_token_ != &::google::protobuf::internal::kEmptyString) {
    delete session_token_;
  }
  if (session_token) {
    set_has_session_token();
    session_token_ = session_token;
  } else {
    clear_has_session_token();
    session_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated uint64 ugc_id = 3;
inline int GetUGCReqMsg::ugc_id_size() const {
  return ugc_id_.size();
}
inline void GetUGCReqMsg::clear_ugc_id() {
  ugc_id_.Clear();
}
inline ::google::protobuf::uint64 GetUGCReqMsg::ugc_id(int index) const {
  return ugc_id_.Get(index);
}
inline void GetUGCReqMsg::set_ugc_id(int index, ::google::protobuf::uint64 value) {
  ugc_id_.Set(index, value);
}
inline void GetUGCReqMsg::add_ugc_id(::google::protobuf::uint64 value) {
  ugc_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
GetUGCReqMsg::ugc_id() const {
  return ugc_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
GetUGCReqMsg::mutable_ugc_id() {
  return &ugc_id_;
}

// repeated uint32 org_uid = 4;
inline int GetUGCReqMsg::org_uid_size() const {
  return org_uid_.size();
}
inline void GetUGCReqMsg::clear_org_uid() {
  org_uid_.Clear();
}
inline ::google::protobuf::uint32 GetUGCReqMsg::org_uid(int index) const {
  return org_uid_.Get(index);
}
inline void GetUGCReqMsg::set_org_uid(int index, ::google::protobuf::uint32 value) {
  org_uid_.Set(index, value);
}
inline void GetUGCReqMsg::add_org_uid(::google::protobuf::uint32 value) {
  org_uid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetUGCReqMsg::org_uid() const {
  return org_uid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetUGCReqMsg::mutable_org_uid() {
  return &org_uid_;
}

// optional .Cell.Geo geo = 5;
inline bool GetUGCReqMsg::has_geo() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetUGCReqMsg::set_has_geo() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetUGCReqMsg::clear_has_geo() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetUGCReqMsg::clear_geo() {
  if (geo_ != NULL) geo_->::Cell::Geo::Clear();
  clear_has_geo();
}
inline const ::Cell::Geo& GetUGCReqMsg::geo() const {
  return geo_ != NULL ? *geo_ : *default_instance_->geo_;
}
inline ::Cell::Geo* GetUGCReqMsg::mutable_geo() {
  set_has_geo();
  if (geo_ == NULL) geo_ = new ::Cell::Geo;
  return geo_;
}
inline ::Cell::Geo* GetUGCReqMsg::release_geo() {
  clear_has_geo();
  ::Cell::Geo* temp = geo_;
  geo_ = NULL;
  return temp;
}
inline void GetUGCReqMsg::set_allocated_geo(::Cell::Geo* geo) {
  delete geo_;
  geo_ = geo;
  if (geo) {
    set_has_geo();
  } else {
    clear_has_geo();
  }
}

// -------------------------------------------------------------------

// GetUGCRespMsg

// required .Cell.RetCode ret_code = 1;
inline bool GetUGCRespMsg::has_ret_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetUGCRespMsg::set_has_ret_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetUGCRespMsg::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetUGCRespMsg::clear_ret_code() {
  ret_code_ = 0;
  clear_has_ret_code();
}
inline ::Cell::RetCode GetUGCRespMsg::ret_code() const {
  return static_cast< ::Cell::RetCode >(ret_code_);
}
inline void GetUGCRespMsg::set_ret_code(::Cell::RetCode value) {
  assert(::Cell::RetCode_IsValid(value));
  set_has_ret_code();
  ret_code_ = value;
}

// repeated .Cell.UGC ugc = 2;
inline int GetUGCRespMsg::ugc_size() const {
  return ugc_.size();
}
inline void GetUGCRespMsg::clear_ugc() {
  ugc_.Clear();
}
inline const ::Cell::UGC& GetUGCRespMsg::ugc(int index) const {
  return ugc_.Get(index);
}
inline ::Cell::UGC* GetUGCRespMsg::mutable_ugc(int index) {
  return ugc_.Mutable(index);
}
inline ::Cell::UGC* GetUGCRespMsg::add_ugc() {
  return ugc_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cell::UGC >&
GetUGCRespMsg::ugc() const {
  return ugc_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cell::UGC >*
GetUGCRespMsg::mutable_ugc() {
  return &ugc_;
}

// repeated uint32 post_num = 3;
inline int GetUGCRespMsg::post_num_size() const {
  return post_num_.size();
}
inline void GetUGCRespMsg::clear_post_num() {
  post_num_.Clear();
}
inline ::google::protobuf::uint32 GetUGCRespMsg::post_num(int index) const {
  return post_num_.Get(index);
}
inline void GetUGCRespMsg::set_post_num(int index, ::google::protobuf::uint32 value) {
  post_num_.Set(index, value);
}
inline void GetUGCRespMsg::add_post_num(::google::protobuf::uint32 value) {
  post_num_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetUGCRespMsg::post_num() const {
  return post_num_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetUGCRespMsg::mutable_post_num() {
  return &post_num_;
}

// repeated uint32 pass_num = 4;
inline int GetUGCRespMsg::pass_num_size() const {
  return pass_num_.size();
}
inline void GetUGCRespMsg::clear_pass_num() {
  pass_num_.Clear();
}
inline ::google::protobuf::uint32 GetUGCRespMsg::pass_num(int index) const {
  return pass_num_.Get(index);
}
inline void GetUGCRespMsg::set_pass_num(int index, ::google::protobuf::uint32 value) {
  pass_num_.Set(index, value);
}
inline void GetUGCRespMsg::add_pass_num(::google::protobuf::uint32 value) {
  pass_num_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetUGCRespMsg::pass_num() const {
  return pass_num_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetUGCRespMsg::mutable_pass_num() {
  return &pass_num_;
}

// repeated uint32 post_dist = 5;
inline int GetUGCRespMsg::post_dist_size() const {
  return post_dist_.size();
}
inline void GetUGCRespMsg::clear_post_dist() {
  post_dist_.Clear();
}
inline ::google::protobuf::uint32 GetUGCRespMsg::post_dist(int index) const {
  return post_dist_.Get(index);
}
inline void GetUGCRespMsg::set_post_dist(int index, ::google::protobuf::uint32 value) {
  post_dist_.Set(index, value);
}
inline void GetUGCRespMsg::add_post_dist(::google::protobuf::uint32 value) {
  post_dist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetUGCRespMsg::post_dist() const {
  return post_dist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetUGCRespMsg::mutable_post_dist() {
  return &post_dist_;
}

// repeated string usr_name = 6;
inline int GetUGCRespMsg::usr_name_size() const {
  return usr_name_.size();
}
inline void GetUGCRespMsg::clear_usr_name() {
  usr_name_.Clear();
}
inline const ::std::string& GetUGCRespMsg::usr_name(int index) const {
  return usr_name_.Get(index);
}
inline ::std::string* GetUGCRespMsg::mutable_usr_name(int index) {
  return usr_name_.Mutable(index);
}
inline void GetUGCRespMsg::set_usr_name(int index, const ::std::string& value) {
  usr_name_.Mutable(index)->assign(value);
}
inline void GetUGCRespMsg::set_usr_name(int index, const char* value) {
  usr_name_.Mutable(index)->assign(value);
}
inline void GetUGCRespMsg::set_usr_name(int index, const char* value, size_t size) {
  usr_name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetUGCRespMsg::add_usr_name() {
  return usr_name_.Add();
}
inline void GetUGCRespMsg::add_usr_name(const ::std::string& value) {
  usr_name_.Add()->assign(value);
}
inline void GetUGCRespMsg::add_usr_name(const char* value) {
  usr_name_.Add()->assign(value);
}
inline void GetUGCRespMsg::add_usr_name(const char* value, size_t size) {
  usr_name_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GetUGCRespMsg::usr_name() const {
  return usr_name_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GetUGCRespMsg::mutable_usr_name() {
  return &usr_name_;
}

// repeated string avada_url = 7;
inline int GetUGCRespMsg::avada_url_size() const {
  return avada_url_.size();
}
inline void GetUGCRespMsg::clear_avada_url() {
  avada_url_.Clear();
}
inline const ::std::string& GetUGCRespMsg::avada_url(int index) const {
  return avada_url_.Get(index);
}
inline ::std::string* GetUGCRespMsg::mutable_avada_url(int index) {
  return avada_url_.Mutable(index);
}
inline void GetUGCRespMsg::set_avada_url(int index, const ::std::string& value) {
  avada_url_.Mutable(index)->assign(value);
}
inline void GetUGCRespMsg::set_avada_url(int index, const char* value) {
  avada_url_.Mutable(index)->assign(value);
}
inline void GetUGCRespMsg::set_avada_url(int index, const char* value, size_t size) {
  avada_url_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetUGCRespMsg::add_avada_url() {
  return avada_url_.Add();
}
inline void GetUGCRespMsg::add_avada_url(const ::std::string& value) {
  avada_url_.Add()->assign(value);
}
inline void GetUGCRespMsg::add_avada_url(const char* value) {
  avada_url_.Add()->assign(value);
}
inline void GetUGCRespMsg::add_avada_url(const char* value, size_t size) {
  avada_url_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GetUGCRespMsg::avada_url() const {
  return avada_url_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GetUGCRespMsg::mutable_avada_url() {
  return &avada_url_;
}

// repeated uint32 dist = 8;
inline int GetUGCRespMsg::dist_size() const {
  return dist_.size();
}
inline void GetUGCRespMsg::clear_dist() {
  dist_.Clear();
}
inline ::google::protobuf::uint32 GetUGCRespMsg::dist(int index) const {
  return dist_.Get(index);
}
inline void GetUGCRespMsg::set_dist(int index, ::google::protobuf::uint32 value) {
  dist_.Set(index, value);
}
inline void GetUGCRespMsg::add_dist(::google::protobuf::uint32 value) {
  dist_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetUGCRespMsg::dist() const {
  return dist_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetUGCRespMsg::mutable_dist() {
  return &dist_;
}

// repeated .Cell.Gender gender = 9;
inline int GetUGCRespMsg::gender_size() const {
  return gender_.size();
}
inline void GetUGCRespMsg::clear_gender() {
  gender_.Clear();
}
inline ::Cell::Gender GetUGCRespMsg::gender(int index) const {
  return static_cast< ::Cell::Gender >(gender_.Get(index));
}
inline void GetUGCRespMsg::set_gender(int index, ::Cell::Gender value) {
  assert(::Cell::Gender_IsValid(value));
  gender_.Set(index, value);
}
inline void GetUGCRespMsg::add_gender(::Cell::Gender value) {
  assert(::Cell::Gender_IsValid(value));
  gender_.Add(value);
}
inline const ::google::protobuf::RepeatedField<int>&
GetUGCRespMsg::gender() const {
  return gender_;
}
inline ::google::protobuf::RepeatedField<int>*
GetUGCRespMsg::mutable_gender() {
  return &gender_;
}

// repeated uint32 alive = 10;
inline int GetUGCRespMsg::alive_size() const {
  return alive_.size();
}
inline void GetUGCRespMsg::clear_alive() {
  alive_.Clear();
}
inline ::google::protobuf::uint32 GetUGCRespMsg::alive(int index) const {
  return alive_.Get(index);
}
inline void GetUGCRespMsg::set_alive(int index, ::google::protobuf::uint32 value) {
  alive_.Set(index, value);
}
inline void GetUGCRespMsg::add_alive(::google::protobuf::uint32 value) {
  alive_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetUGCRespMsg::alive() const {
  return alive_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetUGCRespMsg::mutable_alive() {
  return &alive_;
}

// repeated .Cell.CardType card_type = 11;
inline int GetUGCRespMsg::card_type_size() const {
  return card_type_.size();
}
inline void GetUGCRespMsg::clear_card_type() {
  card_type_.Clear();
}
inline ::Cell::CardType GetUGCRespMsg::card_type(int index) const {
  return static_cast< ::Cell::CardType >(card_type_.Get(index));
}
inline void GetUGCRespMsg::set_card_type(int index, ::Cell::CardType value) {
  assert(::Cell::CardType_IsValid(value));
  card_type_.Set(index, value);
}
inline void GetUGCRespMsg::add_card_type(::Cell::CardType value) {
  assert(::Cell::CardType_IsValid(value));
  card_type_.Add(value);
}
inline const ::google::protobuf::RepeatedField<int>&
GetUGCRespMsg::card_type() const {
  return card_type_;
}
inline ::google::protobuf::RepeatedField<int>*
GetUGCRespMsg::mutable_card_type() {
  return &card_type_;
}

// -------------------------------------------------------------------

// PostUGCReqMsg

// required uint32 uid = 1;
inline bool PostUGCReqMsg::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PostUGCReqMsg::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PostUGCReqMsg::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PostUGCReqMsg::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 PostUGCReqMsg::uid() const {
  return uid_;
}
inline void PostUGCReqMsg::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// required string session_token = 2;
inline bool PostUGCReqMsg::has_session_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PostUGCReqMsg::set_has_session_token() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PostUGCReqMsg::clear_has_session_token() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PostUGCReqMsg::clear_session_token() {
  if (session_token_ != &::google::protobuf::internal::kEmptyString) {
    session_token_->clear();
  }
  clear_has_session_token();
}
inline const ::std::string& PostUGCReqMsg::session_token() const {
  return *session_token_;
}
inline void PostUGCReqMsg::set_session_token(const ::std::string& value) {
  set_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    session_token_ = new ::std::string;
  }
  session_token_->assign(value);
}
inline void PostUGCReqMsg::set_session_token(const char* value) {
  set_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    session_token_ = new ::std::string;
  }
  session_token_->assign(value);
}
inline void PostUGCReqMsg::set_session_token(const char* value, size_t size) {
  set_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    session_token_ = new ::std::string;
  }
  session_token_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PostUGCReqMsg::mutable_session_token() {
  set_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    session_token_ = new ::std::string;
  }
  return session_token_;
}
inline ::std::string* PostUGCReqMsg::release_session_token() {
  clear_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = session_token_;
    session_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PostUGCReqMsg::set_allocated_session_token(::std::string* session_token) {
  if (session_token_ != &::google::protobuf::internal::kEmptyString) {
    delete session_token_;
  }
  if (session_token) {
    set_has_session_token();
    session_token_ = session_token;
  } else {
    clear_has_session_token();
    session_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 ugc_id = 3;
inline bool PostUGCReqMsg::has_ugc_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PostUGCReqMsg::set_has_ugc_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PostUGCReqMsg::clear_has_ugc_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PostUGCReqMsg::clear_ugc_id() {
  ugc_id_ = GOOGLE_ULONGLONG(0);
  clear_has_ugc_id();
}
inline ::google::protobuf::uint64 PostUGCReqMsg::ugc_id() const {
  return ugc_id_;
}
inline void PostUGCReqMsg::set_ugc_id(::google::protobuf::uint64 value) {
  set_has_ugc_id();
  ugc_id_ = value;
}

// optional uint64 msid = 4;
inline bool PostUGCReqMsg::has_msid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PostUGCReqMsg::set_has_msid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PostUGCReqMsg::clear_has_msid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PostUGCReqMsg::clear_msid() {
  msid_ = GOOGLE_ULONGLONG(0);
  clear_has_msid();
}
inline ::google::protobuf::uint64 PostUGCReqMsg::msid() const {
  return msid_;
}
inline void PostUGCReqMsg::set_msid(::google::protobuf::uint64 value) {
  set_has_msid();
  msid_ = value;
}

// optional uint32 org_uid = 5;
inline bool PostUGCReqMsg::has_org_uid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PostUGCReqMsg::set_has_org_uid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PostUGCReqMsg::clear_has_org_uid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PostUGCReqMsg::clear_org_uid() {
  org_uid_ = 0u;
  clear_has_org_uid();
}
inline ::google::protobuf::uint32 PostUGCReqMsg::org_uid() const {
  return org_uid_;
}
inline void PostUGCReqMsg::set_org_uid(::google::protobuf::uint32 value) {
  set_has_org_uid();
  org_uid_ = value;
}

// optional .Cell.PostType post_type = 6;
inline bool PostUGCReqMsg::has_post_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PostUGCReqMsg::set_has_post_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PostUGCReqMsg::clear_has_post_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PostUGCReqMsg::clear_post_type() {
  post_type_ = 0;
  clear_has_post_type();
}
inline ::Cell::PostType PostUGCReqMsg::post_type() const {
  return static_cast< ::Cell::PostType >(post_type_);
}
inline void PostUGCReqMsg::set_post_type(::Cell::PostType value) {
  assert(::Cell::PostType_IsValid(value));
  set_has_post_type();
  post_type_ = value;
}

// optional .Cell.Geo geo = 7;
inline bool PostUGCReqMsg::has_geo() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PostUGCReqMsg::set_has_geo() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PostUGCReqMsg::clear_has_geo() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PostUGCReqMsg::clear_geo() {
  if (geo_ != NULL) geo_->::Cell::Geo::Clear();
  clear_has_geo();
}
inline const ::Cell::Geo& PostUGCReqMsg::geo() const {
  return geo_ != NULL ? *geo_ : *default_instance_->geo_;
}
inline ::Cell::Geo* PostUGCReqMsg::mutable_geo() {
  set_has_geo();
  if (geo_ == NULL) geo_ = new ::Cell::Geo;
  return geo_;
}
inline ::Cell::Geo* PostUGCReqMsg::release_geo() {
  clear_has_geo();
  ::Cell::Geo* temp = geo_;
  geo_ = NULL;
  return temp;
}
inline void PostUGCReqMsg::set_allocated_geo(::Cell::Geo* geo) {
  delete geo_;
  geo_ = geo;
  if (geo) {
    set_has_geo();
  } else {
    clear_has_geo();
  }
}

// -------------------------------------------------------------------

// PostUGCRespMsg

// required .Cell.RetCode ret_code = 1;
inline bool PostUGCRespMsg::has_ret_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PostUGCRespMsg::set_has_ret_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PostUGCRespMsg::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PostUGCRespMsg::clear_ret_code() {
  ret_code_ = 0;
  clear_has_ret_code();
}
inline ::Cell::RetCode PostUGCRespMsg::ret_code() const {
  return static_cast< ::Cell::RetCode >(ret_code_);
}
inline void PostUGCRespMsg::set_ret_code(::Cell::RetCode value) {
  assert(::Cell::RetCode_IsValid(value));
  set_has_ret_code();
  ret_code_ = value;
}

// -------------------------------------------------------------------

// GetUGCListReqMsg

// required uint32 uid = 1;
inline bool GetUGCListReqMsg::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetUGCListReqMsg::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetUGCListReqMsg::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetUGCListReqMsg::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 GetUGCListReqMsg::uid() const {
  return uid_;
}
inline void GetUGCListReqMsg::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// required string session_token = 2;
inline bool GetUGCListReqMsg::has_session_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetUGCListReqMsg::set_has_session_token() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetUGCListReqMsg::clear_has_session_token() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetUGCListReqMsg::clear_session_token() {
  if (session_token_ != &::google::protobuf::internal::kEmptyString) {
    session_token_->clear();
  }
  clear_has_session_token();
}
inline const ::std::string& GetUGCListReqMsg::session_token() const {
  return *session_token_;
}
inline void GetUGCListReqMsg::set_session_token(const ::std::string& value) {
  set_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    session_token_ = new ::std::string;
  }
  session_token_->assign(value);
}
inline void GetUGCListReqMsg::set_session_token(const char* value) {
  set_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    session_token_ = new ::std::string;
  }
  session_token_->assign(value);
}
inline void GetUGCListReqMsg::set_session_token(const char* value, size_t size) {
  set_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    session_token_ = new ::std::string;
  }
  session_token_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetUGCListReqMsg::mutable_session_token() {
  set_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    session_token_ = new ::std::string;
  }
  return session_token_;
}
inline ::std::string* GetUGCListReqMsg::release_session_token() {
  clear_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = session_token_;
    session_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GetUGCListReqMsg::set_allocated_session_token(::std::string* session_token) {
  if (session_token_ != &::google::protobuf::internal::kEmptyString) {
    delete session_token_;
  }
  if (session_token) {
    set_has_session_token();
    session_token_ = session_token;
  } else {
    clear_has_session_token();
    session_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .Cell.UGCListType ugc_list_type = 3;
inline bool GetUGCListReqMsg::has_ugc_list_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetUGCListReqMsg::set_has_ugc_list_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetUGCListReqMsg::clear_has_ugc_list_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetUGCListReqMsg::clear_ugc_list_type() {
  ugc_list_type_ = 0;
  clear_has_ugc_list_type();
}
inline ::Cell::UGCListType GetUGCListReqMsg::ugc_list_type() const {
  return static_cast< ::Cell::UGCListType >(ugc_list_type_);
}
inline void GetUGCListReqMsg::set_ugc_list_type(::Cell::UGCListType value) {
  assert(::Cell::UGCListType_IsValid(value));
  set_has_ugc_list_type();
  ugc_list_type_ = value;
}

// optional uint32 need_ugc_num = 4;
inline bool GetUGCListReqMsg::has_need_ugc_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetUGCListReqMsg::set_has_need_ugc_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetUGCListReqMsg::clear_has_need_ugc_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetUGCListReqMsg::clear_need_ugc_num() {
  need_ugc_num_ = 0u;
  clear_has_need_ugc_num();
}
inline ::google::protobuf::uint32 GetUGCListReqMsg::need_ugc_num() const {
  return need_ugc_num_;
}
inline void GetUGCListReqMsg::set_need_ugc_num(::google::protobuf::uint32 value) {
  set_has_need_ugc_num();
  need_ugc_num_ = value;
}

// optional uint32 last_id = 5;
inline bool GetUGCListReqMsg::has_last_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetUGCListReqMsg::set_has_last_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetUGCListReqMsg::clear_has_last_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetUGCListReqMsg::clear_last_id() {
  last_id_ = 0u;
  clear_has_last_id();
}
inline ::google::protobuf::uint32 GetUGCListReqMsg::last_id() const {
  return last_id_;
}
inline void GetUGCListReqMsg::set_last_id(::google::protobuf::uint32 value) {
  set_has_last_id();
  last_id_ = value;
}

// optional uint32 org_uid = 6;
inline bool GetUGCListReqMsg::has_org_uid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GetUGCListReqMsg::set_has_org_uid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GetUGCListReqMsg::clear_has_org_uid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GetUGCListReqMsg::clear_org_uid() {
  org_uid_ = 0u;
  clear_has_org_uid();
}
inline ::google::protobuf::uint32 GetUGCListReqMsg::org_uid() const {
  return org_uid_;
}
inline void GetUGCListReqMsg::set_org_uid(::google::protobuf::uint32 value) {
  set_has_org_uid();
  org_uid_ = value;
}

// -------------------------------------------------------------------

// GetUGCListRespMsg

// required .Cell.RetCode ret_code = 1;
inline bool GetUGCListRespMsg::has_ret_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetUGCListRespMsg::set_has_ret_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetUGCListRespMsg::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetUGCListRespMsg::clear_ret_code() {
  ret_code_ = 0;
  clear_has_ret_code();
}
inline ::Cell::RetCode GetUGCListRespMsg::ret_code() const {
  return static_cast< ::Cell::RetCode >(ret_code_);
}
inline void GetUGCListRespMsg::set_ret_code(::Cell::RetCode value) {
  assert(::Cell::RetCode_IsValid(value));
  set_has_ret_code();
  ret_code_ = value;
}

// repeated .Cell.UGCIdList ugc_id_list = 2;
inline int GetUGCListRespMsg::ugc_id_list_size() const {
  return ugc_id_list_.size();
}
inline void GetUGCListRespMsg::clear_ugc_id_list() {
  ugc_id_list_.Clear();
}
inline const ::Cell::UGCIdList& GetUGCListRespMsg::ugc_id_list(int index) const {
  return ugc_id_list_.Get(index);
}
inline ::Cell::UGCIdList* GetUGCListRespMsg::mutable_ugc_id_list(int index) {
  return ugc_id_list_.Mutable(index);
}
inline ::Cell::UGCIdList* GetUGCListRespMsg::add_ugc_id_list() {
  return ugc_id_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cell::UGCIdList >&
GetUGCListRespMsg::ugc_id_list() const {
  return ugc_id_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cell::UGCIdList >*
GetUGCListRespMsg::mutable_ugc_id_list() {
  return &ugc_id_list_;
}

// -------------------------------------------------------------------

// AddCommentReqMsg

// required uint32 uid = 1;
inline bool AddCommentReqMsg::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddCommentReqMsg::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddCommentReqMsg::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddCommentReqMsg::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 AddCommentReqMsg::uid() const {
  return uid_;
}
inline void AddCommentReqMsg::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// required string session_token = 2;
inline bool AddCommentReqMsg::has_session_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddCommentReqMsg::set_has_session_token() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddCommentReqMsg::clear_has_session_token() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddCommentReqMsg::clear_session_token() {
  if (session_token_ != &::google::protobuf::internal::kEmptyString) {
    session_token_->clear();
  }
  clear_has_session_token();
}
inline const ::std::string& AddCommentReqMsg::session_token() const {
  return *session_token_;
}
inline void AddCommentReqMsg::set_session_token(const ::std::string& value) {
  set_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    session_token_ = new ::std::string;
  }
  session_token_->assign(value);
}
inline void AddCommentReqMsg::set_session_token(const char* value) {
  set_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    session_token_ = new ::std::string;
  }
  session_token_->assign(value);
}
inline void AddCommentReqMsg::set_session_token(const char* value, size_t size) {
  set_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    session_token_ = new ::std::string;
  }
  session_token_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AddCommentReqMsg::mutable_session_token() {
  set_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    session_token_ = new ::std::string;
  }
  return session_token_;
}
inline ::std::string* AddCommentReqMsg::release_session_token() {
  clear_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = session_token_;
    session_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AddCommentReqMsg::set_allocated_session_token(::std::string* session_token) {
  if (session_token_ != &::google::protobuf::internal::kEmptyString) {
    delete session_token_;
  }
  if (session_token) {
    set_has_session_token();
    session_token_ = session_token;
  } else {
    clear_has_session_token();
    session_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint64 ugc_id = 3;
inline bool AddCommentReqMsg::has_ugc_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AddCommentReqMsg::set_has_ugc_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AddCommentReqMsg::clear_has_ugc_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AddCommentReqMsg::clear_ugc_id() {
  ugc_id_ = GOOGLE_ULONGLONG(0);
  clear_has_ugc_id();
}
inline ::google::protobuf::uint64 AddCommentReqMsg::ugc_id() const {
  return ugc_id_;
}
inline void AddCommentReqMsg::set_ugc_id(::google::protobuf::uint64 value) {
  set_has_ugc_id();
  ugc_id_ = value;
}

// optional uint64 msid = 4;
inline bool AddCommentReqMsg::has_msid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AddCommentReqMsg::set_has_msid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AddCommentReqMsg::clear_has_msid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AddCommentReqMsg::clear_msid() {
  msid_ = GOOGLE_ULONGLONG(0);
  clear_has_msid();
}
inline ::google::protobuf::uint64 AddCommentReqMsg::msid() const {
  return msid_;
}
inline void AddCommentReqMsg::set_msid(::google::protobuf::uint64 value) {
  set_has_msid();
  msid_ = value;
}

// optional uint32 org_uid = 5;
inline bool AddCommentReqMsg::has_org_uid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AddCommentReqMsg::set_has_org_uid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AddCommentReqMsg::clear_has_org_uid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AddCommentReqMsg::clear_org_uid() {
  org_uid_ = 0u;
  clear_has_org_uid();
}
inline ::google::protobuf::uint32 AddCommentReqMsg::org_uid() const {
  return org_uid_;
}
inline void AddCommentReqMsg::set_org_uid(::google::protobuf::uint32 value) {
  set_has_org_uid();
  org_uid_ = value;
}

// optional string comment = 6;
inline bool AddCommentReqMsg::has_comment() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AddCommentReqMsg::set_has_comment() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AddCommentReqMsg::clear_has_comment() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AddCommentReqMsg::clear_comment() {
  if (comment_ != &::google::protobuf::internal::kEmptyString) {
    comment_->clear();
  }
  clear_has_comment();
}
inline const ::std::string& AddCommentReqMsg::comment() const {
  return *comment_;
}
inline void AddCommentReqMsg::set_comment(const ::std::string& value) {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::kEmptyString) {
    comment_ = new ::std::string;
  }
  comment_->assign(value);
}
inline void AddCommentReqMsg::set_comment(const char* value) {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::kEmptyString) {
    comment_ = new ::std::string;
  }
  comment_->assign(value);
}
inline void AddCommentReqMsg::set_comment(const char* value, size_t size) {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::kEmptyString) {
    comment_ = new ::std::string;
  }
  comment_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AddCommentReqMsg::mutable_comment() {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::kEmptyString) {
    comment_ = new ::std::string;
  }
  return comment_;
}
inline ::std::string* AddCommentReqMsg::release_comment() {
  clear_has_comment();
  if (comment_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = comment_;
    comment_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AddCommentReqMsg::set_allocated_comment(::std::string* comment) {
  if (comment_ != &::google::protobuf::internal::kEmptyString) {
    delete comment_;
  }
  if (comment) {
    set_has_comment();
    comment_ = comment;
  } else {
    clear_has_comment();
    comment_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// AddCommentRespMsg

// required .Cell.RetCode ret_code = 1;
inline bool AddCommentRespMsg::has_ret_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddCommentRespMsg::set_has_ret_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddCommentRespMsg::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddCommentRespMsg::clear_ret_code() {
  ret_code_ = 0;
  clear_has_ret_code();
}
inline ::Cell::RetCode AddCommentRespMsg::ret_code() const {
  return static_cast< ::Cell::RetCode >(ret_code_);
}
inline void AddCommentRespMsg::set_ret_code(::Cell::RetCode value) {
  assert(::Cell::RetCode_IsValid(value));
  set_has_ret_code();
  ret_code_ = value;
}

// optional uint64 mcid = 2;
inline bool AddCommentRespMsg::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddCommentRespMsg::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddCommentRespMsg::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddCommentRespMsg::clear_mcid() {
  mcid_ = GOOGLE_ULONGLONG(0);
  clear_has_mcid();
}
inline ::google::protobuf::uint64 AddCommentRespMsg::mcid() const {
  return mcid_;
}
inline void AddCommentRespMsg::set_mcid(::google::protobuf::uint64 value) {
  set_has_mcid();
  mcid_ = value;
}

// -------------------------------------------------------------------

// GetCommentReqMsg

// required uint32 uid = 1;
inline bool GetCommentReqMsg::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetCommentReqMsg::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetCommentReqMsg::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetCommentReqMsg::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 GetCommentReqMsg::uid() const {
  return uid_;
}
inline void GetCommentReqMsg::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// required string session_token = 2;
inline bool GetCommentReqMsg::has_session_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetCommentReqMsg::set_has_session_token() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetCommentReqMsg::clear_has_session_token() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetCommentReqMsg::clear_session_token() {
  if (session_token_ != &::google::protobuf::internal::kEmptyString) {
    session_token_->clear();
  }
  clear_has_session_token();
}
inline const ::std::string& GetCommentReqMsg::session_token() const {
  return *session_token_;
}
inline void GetCommentReqMsg::set_session_token(const ::std::string& value) {
  set_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    session_token_ = new ::std::string;
  }
  session_token_->assign(value);
}
inline void GetCommentReqMsg::set_session_token(const char* value) {
  set_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    session_token_ = new ::std::string;
  }
  session_token_->assign(value);
}
inline void GetCommentReqMsg::set_session_token(const char* value, size_t size) {
  set_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    session_token_ = new ::std::string;
  }
  session_token_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetCommentReqMsg::mutable_session_token() {
  set_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    session_token_ = new ::std::string;
  }
  return session_token_;
}
inline ::std::string* GetCommentReqMsg::release_session_token() {
  clear_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = session_token_;
    session_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GetCommentReqMsg::set_allocated_session_token(::std::string* session_token) {
  if (session_token_ != &::google::protobuf::internal::kEmptyString) {
    delete session_token_;
  }
  if (session_token) {
    set_has_session_token();
    session_token_ = session_token;
  } else {
    clear_has_session_token();
    session_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required .Cell.CommentType comment_type = 3;
inline bool GetCommentReqMsg::has_comment_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetCommentReqMsg::set_has_comment_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetCommentReqMsg::clear_has_comment_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetCommentReqMsg::clear_comment_type() {
  comment_type_ = 0;
  clear_has_comment_type();
}
inline ::Cell::CommentType GetCommentReqMsg::comment_type() const {
  return static_cast< ::Cell::CommentType >(comment_type_);
}
inline void GetCommentReqMsg::set_comment_type(::Cell::CommentType value) {
  assert(::Cell::CommentType_IsValid(value));
  set_has_comment_type();
  comment_type_ = value;
}

// required uint64 cid = 4;
inline bool GetCommentReqMsg::has_cid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetCommentReqMsg::set_has_cid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetCommentReqMsg::clear_has_cid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetCommentReqMsg::clear_cid() {
  cid_ = GOOGLE_ULONGLONG(0);
  clear_has_cid();
}
inline ::google::protobuf::uint64 GetCommentReqMsg::cid() const {
  return cid_;
}
inline void GetCommentReqMsg::set_cid(::google::protobuf::uint64 value) {
  set_has_cid();
  cid_ = value;
}

// optional uint64 last_id = 5;
inline bool GetCommentReqMsg::has_last_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetCommentReqMsg::set_has_last_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetCommentReqMsg::clear_has_last_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetCommentReqMsg::clear_last_id() {
  last_id_ = GOOGLE_ULONGLONG(0);
  clear_has_last_id();
}
inline ::google::protobuf::uint64 GetCommentReqMsg::last_id() const {
  return last_id_;
}
inline void GetCommentReqMsg::set_last_id(::google::protobuf::uint64 value) {
  set_has_last_id();
  last_id_ = value;
}

// optional uint32 need_num = 6;
inline bool GetCommentReqMsg::has_need_num() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GetCommentReqMsg::set_has_need_num() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GetCommentReqMsg::clear_has_need_num() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GetCommentReqMsg::clear_need_num() {
  need_num_ = 0u;
  clear_has_need_num();
}
inline ::google::protobuf::uint32 GetCommentReqMsg::need_num() const {
  return need_num_;
}
inline void GetCommentReqMsg::set_need_num(::google::protobuf::uint32 value) {
  set_has_need_num();
  need_num_ = value;
}

// -------------------------------------------------------------------

// GetCommentRespMsg_CommentDetail

// optional uint64 mcid = 1;
inline bool GetCommentRespMsg_CommentDetail::has_mcid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetCommentRespMsg_CommentDetail::set_has_mcid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetCommentRespMsg_CommentDetail::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetCommentRespMsg_CommentDetail::clear_mcid() {
  mcid_ = GOOGLE_ULONGLONG(0);
  clear_has_mcid();
}
inline ::google::protobuf::uint64 GetCommentRespMsg_CommentDetail::mcid() const {
  return mcid_;
}
inline void GetCommentRespMsg_CommentDetail::set_mcid(::google::protobuf::uint64 value) {
  set_has_mcid();
  mcid_ = value;
}

// optional uint32 uid = 2;
inline bool GetCommentRespMsg_CommentDetail::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetCommentRespMsg_CommentDetail::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetCommentRespMsg_CommentDetail::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetCommentRespMsg_CommentDetail::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 GetCommentRespMsg_CommentDetail::uid() const {
  return uid_;
}
inline void GetCommentRespMsg_CommentDetail::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// optional string name = 3;
inline bool GetCommentRespMsg_CommentDetail::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetCommentRespMsg_CommentDetail::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetCommentRespMsg_CommentDetail::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetCommentRespMsg_CommentDetail::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& GetCommentRespMsg_CommentDetail::name() const {
  return *name_;
}
inline void GetCommentRespMsg_CommentDetail::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GetCommentRespMsg_CommentDetail::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void GetCommentRespMsg_CommentDetail::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetCommentRespMsg_CommentDetail::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* GetCommentRespMsg_CommentDetail::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GetCommentRespMsg_CommentDetail::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string avada_url = 4;
inline bool GetCommentRespMsg_CommentDetail::has_avada_url() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetCommentRespMsg_CommentDetail::set_has_avada_url() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetCommentRespMsg_CommentDetail::clear_has_avada_url() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetCommentRespMsg_CommentDetail::clear_avada_url() {
  if (avada_url_ != &::google::protobuf::internal::kEmptyString) {
    avada_url_->clear();
  }
  clear_has_avada_url();
}
inline const ::std::string& GetCommentRespMsg_CommentDetail::avada_url() const {
  return *avada_url_;
}
inline void GetCommentRespMsg_CommentDetail::set_avada_url(const ::std::string& value) {
  set_has_avada_url();
  if (avada_url_ == &::google::protobuf::internal::kEmptyString) {
    avada_url_ = new ::std::string;
  }
  avada_url_->assign(value);
}
inline void GetCommentRespMsg_CommentDetail::set_avada_url(const char* value) {
  set_has_avada_url();
  if (avada_url_ == &::google::protobuf::internal::kEmptyString) {
    avada_url_ = new ::std::string;
  }
  avada_url_->assign(value);
}
inline void GetCommentRespMsg_CommentDetail::set_avada_url(const char* value, size_t size) {
  set_has_avada_url();
  if (avada_url_ == &::google::protobuf::internal::kEmptyString) {
    avada_url_ = new ::std::string;
  }
  avada_url_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetCommentRespMsg_CommentDetail::mutable_avada_url() {
  set_has_avada_url();
  if (avada_url_ == &::google::protobuf::internal::kEmptyString) {
    avada_url_ = new ::std::string;
  }
  return avada_url_;
}
inline ::std::string* GetCommentRespMsg_CommentDetail::release_avada_url() {
  clear_has_avada_url();
  if (avada_url_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = avada_url_;
    avada_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GetCommentRespMsg_CommentDetail::set_allocated_avada_url(::std::string* avada_url) {
  if (avada_url_ != &::google::protobuf::internal::kEmptyString) {
    delete avada_url_;
  }
  if (avada_url) {
    set_has_avada_url();
    avada_url_ = avada_url;
  } else {
    clear_has_avada_url();
    avada_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string comment = 5;
inline bool GetCommentRespMsg_CommentDetail::has_comment() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetCommentRespMsg_CommentDetail::set_has_comment() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetCommentRespMsg_CommentDetail::clear_has_comment() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetCommentRespMsg_CommentDetail::clear_comment() {
  if (comment_ != &::google::protobuf::internal::kEmptyString) {
    comment_->clear();
  }
  clear_has_comment();
}
inline const ::std::string& GetCommentRespMsg_CommentDetail::comment() const {
  return *comment_;
}
inline void GetCommentRespMsg_CommentDetail::set_comment(const ::std::string& value) {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::kEmptyString) {
    comment_ = new ::std::string;
  }
  comment_->assign(value);
}
inline void GetCommentRespMsg_CommentDetail::set_comment(const char* value) {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::kEmptyString) {
    comment_ = new ::std::string;
  }
  comment_->assign(value);
}
inline void GetCommentRespMsg_CommentDetail::set_comment(const char* value, size_t size) {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::kEmptyString) {
    comment_ = new ::std::string;
  }
  comment_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetCommentRespMsg_CommentDetail::mutable_comment() {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::kEmptyString) {
    comment_ = new ::std::string;
  }
  return comment_;
}
inline ::std::string* GetCommentRespMsg_CommentDetail::release_comment() {
  clear_has_comment();
  if (comment_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = comment_;
    comment_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GetCommentRespMsg_CommentDetail::set_allocated_comment(::std::string* comment) {
  if (comment_ != &::google::protobuf::internal::kEmptyString) {
    delete comment_;
  }
  if (comment) {
    set_has_comment();
    comment_ = comment;
  } else {
    clear_has_comment();
    comment_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string create_time = 6;
inline bool GetCommentRespMsg_CommentDetail::has_create_time() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GetCommentRespMsg_CommentDetail::set_has_create_time() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GetCommentRespMsg_CommentDetail::clear_has_create_time() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GetCommentRespMsg_CommentDetail::clear_create_time() {
  if (create_time_ != &::google::protobuf::internal::kEmptyString) {
    create_time_->clear();
  }
  clear_has_create_time();
}
inline const ::std::string& GetCommentRespMsg_CommentDetail::create_time() const {
  return *create_time_;
}
inline void GetCommentRespMsg_CommentDetail::set_create_time(const ::std::string& value) {
  set_has_create_time();
  if (create_time_ == &::google::protobuf::internal::kEmptyString) {
    create_time_ = new ::std::string;
  }
  create_time_->assign(value);
}
inline void GetCommentRespMsg_CommentDetail::set_create_time(const char* value) {
  set_has_create_time();
  if (create_time_ == &::google::protobuf::internal::kEmptyString) {
    create_time_ = new ::std::string;
  }
  create_time_->assign(value);
}
inline void GetCommentRespMsg_CommentDetail::set_create_time(const char* value, size_t size) {
  set_has_create_time();
  if (create_time_ == &::google::protobuf::internal::kEmptyString) {
    create_time_ = new ::std::string;
  }
  create_time_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetCommentRespMsg_CommentDetail::mutable_create_time() {
  set_has_create_time();
  if (create_time_ == &::google::protobuf::internal::kEmptyString) {
    create_time_ = new ::std::string;
  }
  return create_time_;
}
inline ::std::string* GetCommentRespMsg_CommentDetail::release_create_time() {
  clear_has_create_time();
  if (create_time_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = create_time_;
    create_time_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GetCommentRespMsg_CommentDetail::set_allocated_create_time(::std::string* create_time) {
  if (create_time_ != &::google::protobuf::internal::kEmptyString) {
    delete create_time_;
  }
  if (create_time) {
    set_has_create_time();
    create_time_ = create_time;
  } else {
    clear_has_create_time();
    create_time_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// GetCommentRespMsg

// required .Cell.RetCode ret_code = 1;
inline bool GetCommentRespMsg::has_ret_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetCommentRespMsg::set_has_ret_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetCommentRespMsg::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetCommentRespMsg::clear_ret_code() {
  ret_code_ = 0;
  clear_has_ret_code();
}
inline ::Cell::RetCode GetCommentRespMsg::ret_code() const {
  return static_cast< ::Cell::RetCode >(ret_code_);
}
inline void GetCommentRespMsg::set_ret_code(::Cell::RetCode value) {
  assert(::Cell::RetCode_IsValid(value));
  set_has_ret_code();
  ret_code_ = value;
}

// repeated .Cell.GetCommentRespMsg.CommentDetail comments = 2;
inline int GetCommentRespMsg::comments_size() const {
  return comments_.size();
}
inline void GetCommentRespMsg::clear_comments() {
  comments_.Clear();
}
inline const ::Cell::GetCommentRespMsg_CommentDetail& GetCommentRespMsg::comments(int index) const {
  return comments_.Get(index);
}
inline ::Cell::GetCommentRespMsg_CommentDetail* GetCommentRespMsg::mutable_comments(int index) {
  return comments_.Mutable(index);
}
inline ::Cell::GetCommentRespMsg_CommentDetail* GetCommentRespMsg::add_comments() {
  return comments_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Cell::GetCommentRespMsg_CommentDetail >&
GetCommentRespMsg::comments() const {
  return comments_;
}
inline ::google::protobuf::RepeatedPtrField< ::Cell::GetCommentRespMsg_CommentDetail >*
GetCommentRespMsg::mutable_comments() {
  return &comments_;
}

// -------------------------------------------------------------------

// AddCollectionReqMsg

// required uint32 uid = 1;
inline bool AddCollectionReqMsg::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddCollectionReqMsg::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddCollectionReqMsg::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddCollectionReqMsg::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 AddCollectionReqMsg::uid() const {
  return uid_;
}
inline void AddCollectionReqMsg::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// required string session_token = 2;
inline bool AddCollectionReqMsg::has_session_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddCollectionReqMsg::set_has_session_token() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddCollectionReqMsg::clear_has_session_token() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddCollectionReqMsg::clear_session_token() {
  if (session_token_ != &::google::protobuf::internal::kEmptyString) {
    session_token_->clear();
  }
  clear_has_session_token();
}
inline const ::std::string& AddCollectionReqMsg::session_token() const {
  return *session_token_;
}
inline void AddCollectionReqMsg::set_session_token(const ::std::string& value) {
  set_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    session_token_ = new ::std::string;
  }
  session_token_->assign(value);
}
inline void AddCollectionReqMsg::set_session_token(const char* value) {
  set_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    session_token_ = new ::std::string;
  }
  session_token_->assign(value);
}
inline void AddCollectionReqMsg::set_session_token(const char* value, size_t size) {
  set_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    session_token_ = new ::std::string;
  }
  session_token_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AddCollectionReqMsg::mutable_session_token() {
  set_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    session_token_ = new ::std::string;
  }
  return session_token_;
}
inline ::std::string* AddCollectionReqMsg::release_session_token() {
  clear_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = session_token_;
    session_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AddCollectionReqMsg::set_allocated_session_token(::std::string* session_token) {
  if (session_token_ != &::google::protobuf::internal::kEmptyString) {
    delete session_token_;
  }
  if (session_token) {
    set_has_session_token();
    session_token_ = session_token;
  } else {
    clear_has_session_token();
    session_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required .Cell.ConfirmType confirmType = 3;
inline bool AddCollectionReqMsg::has_confirmtype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AddCollectionReqMsg::set_has_confirmtype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AddCollectionReqMsg::clear_has_confirmtype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AddCollectionReqMsg::clear_confirmtype() {
  confirmtype_ = 1;
  clear_has_confirmtype();
}
inline ::Cell::ConfirmType AddCollectionReqMsg::confirmtype() const {
  return static_cast< ::Cell::ConfirmType >(confirmtype_);
}
inline void AddCollectionReqMsg::set_confirmtype(::Cell::ConfirmType value) {
  assert(::Cell::ConfirmType_IsValid(value));
  set_has_confirmtype();
  confirmtype_ = value;
}

// required .Cell.UGCIdList ugc_id_list = 4;
inline bool AddCollectionReqMsg::has_ugc_id_list() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AddCollectionReqMsg::set_has_ugc_id_list() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AddCollectionReqMsg::clear_has_ugc_id_list() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AddCollectionReqMsg::clear_ugc_id_list() {
  if (ugc_id_list_ != NULL) ugc_id_list_->::Cell::UGCIdList::Clear();
  clear_has_ugc_id_list();
}
inline const ::Cell::UGCIdList& AddCollectionReqMsg::ugc_id_list() const {
  return ugc_id_list_ != NULL ? *ugc_id_list_ : *default_instance_->ugc_id_list_;
}
inline ::Cell::UGCIdList* AddCollectionReqMsg::mutable_ugc_id_list() {
  set_has_ugc_id_list();
  if (ugc_id_list_ == NULL) ugc_id_list_ = new ::Cell::UGCIdList;
  return ugc_id_list_;
}
inline ::Cell::UGCIdList* AddCollectionReqMsg::release_ugc_id_list() {
  clear_has_ugc_id_list();
  ::Cell::UGCIdList* temp = ugc_id_list_;
  ugc_id_list_ = NULL;
  return temp;
}
inline void AddCollectionReqMsg::set_allocated_ugc_id_list(::Cell::UGCIdList* ugc_id_list) {
  delete ugc_id_list_;
  ugc_id_list_ = ugc_id_list;
  if (ugc_id_list) {
    set_has_ugc_id_list();
  } else {
    clear_has_ugc_id_list();
  }
}

// -------------------------------------------------------------------

// AddCollectionRespMsg

// required .Cell.RetCode ret_code = 1;
inline bool AddCollectionRespMsg::has_ret_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddCollectionRespMsg::set_has_ret_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddCollectionRespMsg::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddCollectionRespMsg::clear_ret_code() {
  ret_code_ = 0;
  clear_has_ret_code();
}
inline ::Cell::RetCode AddCollectionRespMsg::ret_code() const {
  return static_cast< ::Cell::RetCode >(ret_code_);
}
inline void AddCollectionRespMsg::set_ret_code(::Cell::RetCode value) {
  assert(::Cell::RetCode_IsValid(value));
  set_has_ret_code();
  ret_code_ = value;
}

// optional uint64 clt_id = 2;
inline bool AddCollectionRespMsg::has_clt_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddCollectionRespMsg::set_has_clt_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddCollectionRespMsg::clear_has_clt_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddCollectionRespMsg::clear_clt_id() {
  clt_id_ = GOOGLE_ULONGLONG(0);
  clear_has_clt_id();
}
inline ::google::protobuf::uint64 AddCollectionRespMsg::clt_id() const {
  return clt_id_;
}
inline void AddCollectionRespMsg::set_clt_id(::google::protobuf::uint64 value) {
  set_has_clt_id();
  clt_id_ = value;
}

// -------------------------------------------------------------------

// PlayCardReqMsg

// required uint32 uid = 1;
inline bool PlayCardReqMsg::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayCardReqMsg::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayCardReqMsg::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayCardReqMsg::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 PlayCardReqMsg::uid() const {
  return uid_;
}
inline void PlayCardReqMsg::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
}

// required string session_token = 2;
inline bool PlayCardReqMsg::has_session_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayCardReqMsg::set_has_session_token() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayCardReqMsg::clear_has_session_token() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayCardReqMsg::clear_session_token() {
  if (session_token_ != &::google::protobuf::internal::kEmptyString) {
    session_token_->clear();
  }
  clear_has_session_token();
}
inline const ::std::string& PlayCardReqMsg::session_token() const {
  return *session_token_;
}
inline void PlayCardReqMsg::set_session_token(const ::std::string& value) {
  set_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    session_token_ = new ::std::string;
  }
  session_token_->assign(value);
}
inline void PlayCardReqMsg::set_session_token(const char* value) {
  set_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    session_token_ = new ::std::string;
  }
  session_token_->assign(value);
}
inline void PlayCardReqMsg::set_session_token(const char* value, size_t size) {
  set_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    session_token_ = new ::std::string;
  }
  session_token_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PlayCardReqMsg::mutable_session_token() {
  set_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    session_token_ = new ::std::string;
  }
  return session_token_;
}
inline ::std::string* PlayCardReqMsg::release_session_token() {
  clear_has_session_token();
  if (session_token_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = session_token_;
    session_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PlayCardReqMsg::set_allocated_session_token(::std::string* session_token) {
  if (session_token_ != &::google::protobuf::internal::kEmptyString) {
    delete session_token_;
  }
  if (session_token) {
    set_has_session_token();
    session_token_ = session_token;
  } else {
    clear_has_session_token();
    session_token_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .Cell.Geo geo = 3;
inline bool PlayCardReqMsg::has_geo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayCardReqMsg::set_has_geo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayCardReqMsg::clear_has_geo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayCardReqMsg::clear_geo() {
  if (geo_ != NULL) geo_->::Cell::Geo::Clear();
  clear_has_geo();
}
inline const ::Cell::Geo& PlayCardReqMsg::geo() const {
  return geo_ != NULL ? *geo_ : *default_instance_->geo_;
}
inline ::Cell::Geo* PlayCardReqMsg::mutable_geo() {
  set_has_geo();
  if (geo_ == NULL) geo_ = new ::Cell::Geo;
  return geo_;
}
inline ::Cell::Geo* PlayCardReqMsg::release_geo() {
  clear_has_geo();
  ::Cell::Geo* temp = geo_;
  geo_ = NULL;
  return temp;
}
inline void PlayCardReqMsg::set_allocated_geo(::Cell::Geo* geo) {
  delete geo_;
  geo_ = geo;
  if (geo) {
    set_has_geo();
  } else {
    clear_has_geo();
  }
}

// optional int32 coin = 4;
inline bool PlayCardReqMsg::has_coin() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayCardReqMsg::set_has_coin() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PlayCardReqMsg::clear_has_coin() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PlayCardReqMsg::clear_coin() {
  coin_ = 0;
  clear_has_coin();
}
inline ::google::protobuf::int32 PlayCardReqMsg::coin() const {
  return coin_;
}
inline void PlayCardReqMsg::set_coin(::google::protobuf::int32 value) {
  set_has_coin();
  coin_ = value;
}

// -------------------------------------------------------------------

// PlayCardRespMsg

// required .Cell.RetCode ret_code = 1;
inline bool PlayCardRespMsg::has_ret_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayCardRespMsg::set_has_ret_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayCardRespMsg::clear_has_ret_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayCardRespMsg::clear_ret_code() {
  ret_code_ = 0;
  clear_has_ret_code();
}
inline ::Cell::RetCode PlayCardRespMsg::ret_code() const {
  return static_cast< ::Cell::RetCode >(ret_code_);
}
inline void PlayCardRespMsg::set_ret_code(::Cell::RetCode value) {
  assert(::Cell::RetCode_IsValid(value));
  set_has_ret_code();
  ret_code_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Cell

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ugc_2eproto__INCLUDED
